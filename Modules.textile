Check out "search.npmjs.org":http://search.npmjs.org/ too

h2. Adding to this page

When you add a framework to this page, have a look at how others have done so, it should be a single item, with a link to the project's source code, and a short description (one line after formatting has been applied).

If you see a module without a description, feel free to edit the page and add it in, any contributions are appreciated.

When you edit this list, also add your module to [[library-compatibility]] so that users will know which versions of Node it was tested with.

Table of contents! <!-- generated by http://jsfiddle.net/ASXPb/4/ and the amazing dtrejo! ;) -->

* <a href="#modules" rel="nofollow">Modules</a>
** <a href="#web-frameworks" rel="nofollow">Web frameworks</a>
*** <a href="#web-frameworks-routers" rel="nofollow">Routers</a>
*** <a href="#web-frameworks-static" rel="nofollow">Static file servers</a>
*** <a href="#web-frameworks-micro" rel="nofollow">Microframeworks</a>
*** <a href="#web-frameworks-full" rel="nofollow">Frameworks</a>
*** <a href="#middleware" rel="nofollow">Middleware</a><br><a name="wiki-middleware-jsgi" rel="nofollow"></a>
*** <a href="#web-frameworks-other" rel="nofollow">Other</a>
** <a href="#database" rel="nofollow">Database</a>
** <a href="#templating" rel="nofollow">Templating</a>
** <a href="#css-engines" rel="nofollow"><span class="caps">CSS</span> Engines</a>
** <a href="#content-management" rel="nofollow">Content Management Systems</a>
** <a href="#build-and-deployment" rel="nofollow">Build and Deployment</a>
** <a href="#package-management" rel="nofollow">Package Management Systems</a>
** <a href="#module-loader" rel="nofollow">Module Loader</a>
** <a href="#security" rel="nofollow">OpenSSL / Crypto / Hashing</a>
** <a href="#smtp" rel="nofollow"><span class="caps">SMTP</span></a>
** <a href="#tcp" rel="nofollow"><span class="caps">TCP</span> / IP</a>
** <a href="#rpc" rel="nofollow"><span class="caps">RPC</span></a>
** <a href="#ws-ajax" rel="nofollow">Web Sockets &amp; Ajax</a>
** <a href="#message-queue" rel="nofollow">Message Queues</a>
** <a href="#class-system" rel="nofollow">Class systems</a>
** <a href="#testing" rel="nofollow">Testing / Spec Frameworks</a>
** <a href="#wrappers" rel="nofollow">Wrappers</a>
** <a href="#parsers" rel="nofollow">Parsers</a>
*** <a href="#parsers-json" rel="nofollow"><span class="caps">JSON</span></a>
*** <a href="#parsers-xml" rel="nofollow"><span class="caps">XML</span></a>
*** <a href="#parsers-commandline" rel="nofollow">Command Line Option Parsers</a>
*** <a href="#parser-generators" rel="nofollow">Parser Generators</a>
*** <a href="#parsers-other" rel="nofollow">Other Parsers</a>
** <a href="#debugging" rel="nofollow">Debugging / Console Utilities</a>
** <a href="#compression" rel="nofollow">Compression</a>
** <a href="#graphics" rel="nofollow">Graphics</a>
** <a href="#payment-gateways" rel="nofollow">Payment Gateways</a>
** <a href="#api-clients" rel="nofollow"><span class="caps">API</span> clients</a>
** <a href="#async-flow" rel="nofollow">Control flow / Async goodies</a>
** <a href="#i18n" rel="nofollow">I18n and L10n modules</a>
** <a href="#boilerplates" rel="nofollow">Boilerplates</a>
** <a href="#continuous-integration" rel="nofollow">Continuous Integration Tools</a>
** <a href="#other" rel="nofollow">Other</a>
* <a href="#management" rel="nofollow">Node Management Utilities</a>
* <a href="#commonjs-compat" rel="nofollow">CommonJS compatible modules that can be used with node.</a>
* <a href="#project-generators" rel="nofollow">Project Generators</a>
* <a href="#coffee-script" rel="nofollow">CoffeeScript modules</a>
* <a href="#search" rel="nofollow">Full text search</a>

<a name="wiki-wiki-modules"></a>

h2(#modules). "Modules":#modules

<a name="wiki-web-frameworks"></a>

h3(#web-frameworks). "Web frameworks":#web-frameworks

<a name="wiki-web-frameworks-routers"></a>

h4(#web-frameworks-routers). "Routers":#web-frameworks-routers
* "barista":https://github.com/kieran/barista -- A fast, flexible URL router & generator, similar to Rails / merb
* "beeline":https://github.com/xavi-/beeline -- A laughably simplistic router for node.js
* "biggie-router":https://github.com/biggie/biggie-router -- Router for the biggie framework. Inspired by Sinatra and JQuery.
* "blueprint":https://github.com/ingklabs/blueprint -- Blueprint for an App. Middleware, & MVC routing over Node.js & Mongoose
* "choreographer":https://github.com/laughinghan/choreographer -- Your server is my stage -- dirt simple URL routing for Node.js. Easy to use, easy to understand. Sinatra-style API.
* "clutch":https://github.com/clement/clutch -- no-frills web request router, supporting nested routes, regexp parameters
* "connect":https://github.com/senchalabs/Connect -- Robust high performance middleware framework
* "crossroads":http://millermedeiros.github.com/crossroads.js/ -- Powerful and Flexible routing library, works on the client-side as well and have support for advanced features.
* "dispatch":https://github.com/caolan/dispatch -- Regular expression URL dispatcher for Connect
* "escort":https://github.com/ckknight/escort -- High-performance, advanced routing and URL generation
* "filter-chain":https://github.com/teknopaul/filter-chain -- Java ServletFilter style request chaining
* "journey":https://github.com/cloudhead/journey -- liberal JSON-only HTTP request router
* "node-router":https://github.com/creationix/node-router -- Simple Sinatra-like http server based on fu.js from the original node-chat demo.
* "node.routes.js":https://github.com/defrex/node.routes.js/ -- A simple url router
* "nozzle":https://github.com/fictorial/nozzle -- web app/service framework
* "sherpa":https://github.com/joshbuddy/sherpa -- HTTP router/generator with support for regex and parameters
* "router":https://github.com/gett/router -- A simple router with regex and sinatra like parameter support

<a name="wiki-web-frameworks-static"></a>

h4(#web-frameworks-static). "Static file servers":#web-frameworks-static
* "Lightnode":http://www.ngspinners.com/lightnode/ -- Easy to understand. Fast. Provides simple framework. (hierarchical servers, delegation, caching, virtual hosts).
* "navajo":https://github.com/dresende/navajo - A simple web server with the ability to run PHP or Node code as well as serve static files (alpha)
* "Nitrode":https://github.com/ollym/nitrode -- A lightweight, super fast HTTP 1.1 with internal JS API
* "antinode":https://github.com/mhansen/antinode -- A simple static web server
* "connect":https://github.com/senchalabs/connect -- Connect's static() middleware provides flexible, high-performance, feature-rich static file serving
* "node-paperboy":https://github.com/felixge/node-paperboy -- A node.js module for delivering static files
* "node-static":https://github.com/cloudhead/node-static -- A simple, rfc 2616-compliant static file server module with built-in caching
* "oui":https://github.com/rsms/oui -- Web service server with great static files support
* "static":https://github.com/kriszyp/pintura/blob/master/jsgi/static.js - Static file handler using asynchronous streaming as JSGI middleware
* "static-resource":https://github.com/atsuya/static-resource - Static resource handling for node.js
* "Trailer":https://github.com/tylermwashburn/Trailer -- Everyone's favorite backend.
* "nodetoy":https://github.com/teknopaul/nodetoy -- Static JSON file server that supports GET, POST and DELETE
<a name="wiki-web-frameworks-micro"></a>

h4(#web-frameworks-micro). "Microframeworks":#web-frameworks-micro
* "Ni":https://github.com/chetan51/ni -- A minimalistic Node module / framework that makes setting up an MVC project a breeze
* "(fab)":http://www.fabjs.org -- A modular and concise async web framework for node.js
* "kaph":https://github.com/akaspin/kaph -- Not framework
* "Layers":https://github.com/dave-elkan/layers -- A module to help create a layered web app with Express.
* "Nerve":https://github.com/gjritter/nerve -- Microframework with simple array-based syntax for defining an app on top of node. (node.JS 0.1.30)
* "restmvc.js":https://github.com/keithnlarsen/restmvc.js -- A simple library to help you quickly create RESTful webservices using Express, Mongoose, and MongoDB.
* "rowan":https://github.com/idmillington/rowan -- A hierarchical microframework of reusable controllers and modular app logic.
* "vroom":https://github.com/raycmorgan/vroom/tree/master -- A simple resource oriented web framework built on top of Node.js (November 2009, node.JS 0.1.16)
* "Picard":https://github.com/dantebronto/picard
* "simplex":https://github.com/mshakhan/simplex (October 2009, node.JS 0.1.14)
* "Pipe-Layer":http://cgit.voodoowarez.com/pipe-layer/ -- Asynchronous HTTP router.
* "frank":https://github.com/mvrilo/frank -- yet another sinatra-like microframework for node
* "webservice.js":https://github.com/Marak/webservice.js -- turn node.js modules into RESTFul web-services
* "zappa":https://github.com/mauricemach/zappa -- CoffeeScript minimalist interface to express, socket.io and others.
* "jqNode":https://github.com/pradeek/jqNode -- Simple jQuery-esque API for small projects.


<a name="wiki-web-frameworks-full"></a>

h4(#web-frameworks-full). "Frameworks":#web-frameworks-full
* "archetype":https://github.com/jefftrudeau/archetype/ -- A web framework leveraging Node.js
* "aries":https://github.com/edjafarov/aries -- Annotation based MVC framework
* "broke":https://github.com/brokenseal/broke/ -- A porting of the most famous "Django Web Framework":http://www.djangoproject.com/
* "chain":https://github.com/hassox/chain/ -- An evented convention for building Node Applications (Stopped Development, for ejsgi)
* "Web.js":https://github.com/iwillwen/Web.js -- A simple, fast and light HTTP/TCP framework for NodeJS
* "coltrane":https://github.com/ujh/coltrane/tree/master -- A try at a higher level library/framework for node.js web development (July 2009, node.JS 0.1.1)
* "djangode":https://github.com/simonw/djangode -- A framework that borrows some useful concepts from "Django":http://www.djangoproject.com/. (March 2010, node.JS 0.1.30)
* "drty":https://github.com/drtyhbo/drty -- A Django port to NodeJS. Many Django features, still under heavy development. (January, 2011, 0.2.6)
* "Express":https://github.com/visionmedia/express/tree/master -- A robust feature rich web development framework **inspired by Sinatra**
* "Kiss.js":https://github.com/stanislavfeldman/kiss.js -- Web framework for node.js in CoffeeScript. Object-oriented, simple and sexy.
* "Sayndo":https://github.com/zyndiecate/sayndo/tree/master -- Fast and flexible web server with customized routing and authorization
* "N-Ext":https://github.com/xcambar/n-ext -- Ext.core, Ext.util and Ext.data packages in your NodeJS apps (includes a MongoDB proxy based on "node-mongodb-native":https://github.com/xcambar/n-ext/node-mongodb-native)
* "node-extjs":https://github.com/egorFiNE/node-extjs -- Run ExtJS4 data models on Node.js
* "Ext Core for NodeJS":https://github.com/mycoding/Ext-Core-for-NodeJS -- Templating and some basic tricks of ExtCore and ExtJS(XTemplate,Ext.util.format)
* "Grasshopper":https://github.com/tuxychandru/grasshopper/tree/master -- A feature-rich and flexible MVC framework for web applications and services, with integrated **dependency injection**.
* "Geddy":https://github.com/mde/geddy/tree/master -- A hackable Web-app development framework similar to Merb/Rails/Pylons/Django
* "GenJi":https://github.com/zir/genji -- A low-level loosely coupled web framework for nodejs
* "jimi":https://github.com/colingourlay/jimi -- A framework for writing modular web applications in node.js ("tutorial":https://github.com/colingourlay/jimi/wiki)
* "js.io":https://github.com/mcarter/js.io -- JavaScript Networking Library for building real-time web applications. Also see "JS.io":http://js.io
* "merlin":https://github.com/brynbellomy/merlin -- Object-oriented MVC framework relying on a robust set of conventions to minimize code.  Also ships with optional plugins providing basic CMS-like functionality.
* "PieJS":https://github.com/fakewaffle/piejs -- A rapid development MVC framework. Inspired and similar in style/convention to CakePHP. In very active development.
* "RailwayJS":https://github.com/1602/express-on-railway -- An MVC web framework, similar to **Ruby on Rails**, Express/Connect-compatible. Also see "here (en)":http://railwayjs.com and "here (jp)":http://railwayjs.jp
* "josi":https://github.com/thatismatt/josi -- An MVC web framework that's easy to pick up but doesn't get in the way. Also see "here":http://thatismatt.github.com/josi/.
* "Meryl":https://github.com/kadirpekel/meryl -- Minimalist web framework! See "wiki":http://github.com/kadirpekel/meryl/wiki
* "Coffeemate":https://github.com/kadirpekel/coffeemate -- Push coffee-script into web development!
* "nodemachine":https://github.com/tautologistics/nodemachine -- A port of WebMachine to Node.js
* "nodepress":https://github.com/zir/nodepress -- High-level web framework for nodejs, can be used as a blog by default
* "pintura":https://github.com/kriszyp/pintura -- REST-based web framework/"middleware":https://github.com/kriszyp/pintura/tree/master/lib/jsgi/ stack built for Ajax-style "JSON-driven applications":http://www.sitepen.com/blog/2010/01/22/introducing-pintura/.
* "SocketStream":https://github.com/socketstream/socketstream -- A fast full-stack real-time web framework for single-page apps
* "spludo":http://spludo.com -- A full featured web framework. Fully Async + MVC with DI, AOP and Storages. ("tutorial":http://docsforit.spludo.com/ + "user-guide":http://spludo.com/user-guide/full/)
* "Seek":https://github.com/fk1blow/Seek/ -- Small Javascript Web framework - mostly for learning purpose
* "WIN":https://github.com/mathgladiator/win -- A simple page centric framework designed around CouchDB+Mustache
* "Zeppelin":https://github.com/pelger/Zeppelin -- An early stage, low friction cloud development framework    
* "Kassit":https://github.com/marxus85/kassit -- rapid building of client-side AJAX applications using "Backbone":http://documentcloud.github.com/backbone/ and "CoffeeScript":http://jashkenas.github.com/coffee-script/
* "BaseJump":https://github.com/mediaupstream/BaseJump -- A RAD NodeJS Framework - Built on top of **Connect** (alpha release)

<a name="wiki-middleware"></a>

h4(#middleware). "Middleware":#middleware
<a name="wiki-middleware-jsgi"></a>
* "JSGI":#middleware-jsgi 
** "cascade":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/cascade.js -- Sequentially attempts multiple middleware apps.
** "compress":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/compress.js - Gzip compresses (using node-compress) the response when appropriate based on request headers.
** "media":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/media.js - Performs content type negotiation (per RFC2616) delegating to appropriate media handler.
** "csrf":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/csrf.js - Checks HTTP request for possible cross-site request forgery, flags dangerous requests.
** "xsite":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/xsite.js - Handles JSONP, window.name, and cross-origin XHR (CORS).
** "rewriter":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/rewriter.js - Rewrites defined paths to other paths.
** "static":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/static.js - Static file handler using asynchronous streaming.
** "error":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/error.js - Catches uncaught errors and converts to appropriate HTTP error responses.
** "conditional":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/conditional.js - Handles conditional HTTP requests (If-Modified-Since, etc.)
** "http-params":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/http-params.js - Converts HTTP parameters http-<name> to headers.
** "auth":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/auth.js - Handles Authentication (HTTP and cookie based).
** "commonlogger":https://github.com/280north/jack/blob/0.3/lib/jack/commonlogger.js - A logger of HTTP requests.
** "contentlength":https://github.com/280north/jack/blob/0.3/lib/jack/contentlength.js - Sets Content-Length header.
** "head":https://github.com/280north/jack/blob/0.3/lib/jack/head.js - Handles HEAD requests (stripping body).
** "redirect":https://github.com/280north/jack/blob/0.3/lib/jack/redirect.js - Redirects to other URLs
** "urlmap":https://github.com/280north/jack/blob/0.3/lib/jack/urlmap.js - Maps to different apps by path/URL
** "extension":https://github.com/dvv/pintura/blob/master/lib/jsgi/extension.js - Transforms .extension to a RESTful Accept header
** "transporter":https://github.com/kriszyp/transporter - Share modules with browser, works RequireJS and Yabble
** "routes":https://github.com/dvv/pintura/blob/master/lib/jsgi/routes.js - Simple RegExp based router
** "session":https://github.com/kriszyp/pintura/blob/master/lib/jsgi/session.js - Session manager with pluggable storage handling
<a name="wiki-middleware-connect"></a>
* "Connect":#middleware-connect
** "connect-airbrake":http://github.com/thegoleffect/connect-airbrake -- Airbrake error reporting auto-setup middleware
** "connect-assetmanager":https://github.com/mape/connect-assetmanager - Asset manager for Connect for handling CSS/JS files
** "connect-assets":https://github.com/TrevorBurnham/connect-assets - Compiled CSS/JS asset pipeline inspired by Rails 3.1
** "connect-force-domain":https://github.com/shapeshed/connect-force-domain -- force all visitors onto a single domain
** "connect-rpx":https://github.com/xrd/connect-rpx - Use RPX with Node.js and Connect
** "connect_facebook":https://github.com/rsms/connect_facebook - Facebook session support for Connect
** "connect_json":https://github.com/rsms/connect_json - Support for parsing JSON requests and sending JSON responses in Connect
** "gzippo":https://github.com/tomgallacher/gzippo -- gzip static content files with Connect/Express
** "cookie-sessions":https://github.com/caolan/cookie-sessions -- Secure cookie-based session store
** "dispatch":https://github.com/caolan/dispatch -- Regular expression URL dispatcher
** "formaline":https://github.com/rootslab/formaline - full-featured module for handling form POSTs/PUTs (multipart/form-data, application/x-www-form-urlencoded ) and fast parsing of file uploads, it speaks JSON and it is also ready for use with middlewares like connect.
** "form2json":https://github.com/fgnass/form2json -- Decoder for form-urlencoded data that supports arrays of nested objects
** "monomi":https://github.com/jamesgpearce/monomi/ -- Provides tools for handling tablet, touch, and mobile browsers
** "node-facebook-session-cookie":https://github.com/jonashuckestein/node-facebook-session-cookie -- eats facebook cookies from client FB.login() and makes the session available as req.fb_session
** "quip":https://github.com/caolan/quip -- Chainable HTTP response API  
** "resource-router":https://github.com/s3u/resource-router -- A resource-oriented router to replace the default routing in express
** "session.js":https://github.com/Marak/session.js -- super simple session middleware for node.js, even has optional "magic" sessions which monkey patch the httpServer with one line!
** "session-web-sockets":https://github.com/kazuyukitanimura/session-web-sockets -- Pass session to (Socket.IO-node) in a secure manner.   Originally forked from "bmeck/session-web-sockets":https://github.com/bmeck/session-web-sockets
** "trust-reverse-proxy":https://github.com/zazengo/trust-reverse-proxy - Trust (SSL) connections coming from (a) specific reverse prox(y)(ies)
** "node_signedcookies":https://github.com/mattrobenolt/node_signedcookies -- Extends Express's cookieParser() to read/write signed cookies.
** "connect-proxy":https://github.com/gonsfx/connect-proxy -- Retrieve originating ip/host values when proxying to your connect app
** "minj":https://github.com/bengourley/minj -- Serve minified javascript files with Connect/Express
** "connect-dojo":https://github.com/wdavidw/connect-dojo -- Connect middleware exposing the Dojo Toolkit
** "express-chromeframe":https://github.com/mhemesath/express-chromeframe -- Dead simple middleware to enable chromeframe on connect/express applications.
** "connect-auth":https://github.com/ciaranj/connect-auth -- Connect authentication middleware, provides out-of-the-box implementations of HTTP (Basic & Digest), Twitter, Facebook, BitBucket, Janrain, Yahoo, Sina, Google, OAuth (1.0 server), Github and a couple of others....
<a name="wiki-middleware-other"></a>
** "everyauth":https://github.com/bnoguchi/everyauth -- Connect authentication and authorization middleware, modular, configurable, supporting password, OpenId, Google, OAuth, Twitter, LinkedIn, Yahoo, Readability, Dropbox, Justin.tv, Vimeo, Tumblr, OAuth2, Facebook, GitHub, Instagram, Foursquare, Box.net, LDAP
* "Other":#middleware-other 
** "node-file-cache":https://github.com/FLYBYME/node-file-cache - Very small file cache for node.js http server.
** "protobuf_for_node":http://code.google.com/p/protobuf-for-node/ -- In-process JS-to-C++ communication using protocol buffer services
** "socket-logger":https://github.com/saikat/socket-logger/ -- JSON-parsable logs for Socket.IO that can push log messages to a client over Socket.IO.
** "node-evented":https://github.com/indutny/node-evented -- Extended EventEmitter
** "http-proxy-selective":https://github.com/zentooo/node-http-proxy-selective -- Proxy server replace some remote static files with local ones
** "proxy-tamper":https://github.com/tsyd/proxy-tamper -- A proxy server that allows for the tampering of requests and responses.
** "googleclientlogin":https://github.com/Ajnasz/GoogleClientLogin -- Log in to Google services using CllientLogin method
** "node-reverse-proxy":http://www.steve.org.uk/Software/node-reverse-proxy -- A reverse proxy which forwards incoming HTTP requests to multiple back-end HTTP servers based upon HTTP Host header.
** "Node-Http-Rewrite-Proxy":https://github.com/FlashFan/Node-Http-Rewrite-Proxy -- This module proxies and rewrites HTTP requests of all types. For this you can, if you want, use regular expressions.
** "eventpipe":http://www.google.com/url?sa=D&q=https://github.com/dhruvbird/eventpipe -- Provides an Event Pipe with the *same* API as node.js' EventEmitter
** "express-twitter":https://github.com/mahemoff/express-twitter -- Twitter-specific OAuth support
** "http-auth":https://github.com/gevorg/http-auth -- Node.js package for HTTP basic and digest access authentication.
** "http-auth2":https://github.com/SDA/http-auth2 -- HTTP basic authentication that supports multiple logins.

<a name="wiki-web-frameworks-other"></a>

h4(#web-frameworks-other). "Other":#web-frameworks-other
* "Alligator":https://github.com/mrohad/Alligator -- Application Server on top of NodeJS (JSSP and SSJS support)
* "Unlimit":https://github.com/limeblack/UnlimitJS -- chaining to JavaScript without extending objects' prototypes
* "Nitrode":https://github.com/ollym/nitrode -- A lightweight, super fast HTTP 1.1 with internal JS API
* "Cluster":https://github.com/LearnBoost/cluster -- Extensible multi-core server manager (spark successor)
* "Common Node":https://github.com/olegp/common-node -- Synchronous CommonJS compatibility layer that includes JSGI, jBinary, IO, Filesystem, System and HttpClient modules
* "Connect":https://github.com/senchalabs/connect -- Middleware framework packed with high quality / performance middleware
* "Spark":https://github.com/senchalabs/spark -- A command-line tool used to manage node server processes
* "Spark2":https://github.com/davglass/spark2 -- Fork of "Spark":https://github.com/senchalabs/spark with some improvements.
* "Stereo":https://github.com/dvv/stereo -- A simple drop-in multi-core node application controller
* "node-elf-logger":https://github.com/TooTallNate/node-elf-logger -- Configurable HTTP logging library following the "W3C Extended Log File Format specification":http://www.w3.org/TR/WD-logfile.html
* "JSGI-Node":https://github.com/kriszyp/jsgi-node/ -- Asynchronous JSGI 0.3 Adapter for Node, for standards-based middleware
* "node-mime":https://github.com/bentomas/node-mime -- Utility module for mime-type lookups
* "mime-magic":https://github.com/SaltwaterC/mime-magic -- Proper MIME type detection library that wraps the libmagic functionality
* "node-cgi":https://github.com/pufuwozu/node-cgi -- CGI adapter kludge (replaces Node's fast and famous event-based HTTP library)
* "node.ly":https://github.com/giacecco/node.ly -- A simple URL shortener (currently not available on GitHub)
* "multi-node":https://github.com/kriszyp/multi-node -- Launch multiple node processes for HTTP servers
* "node-digest":https://github.com/wearefractal/node-digest -- HTTP Digest authentication for NodeJS
* "Q-Oper8":https://github.com/robtweed/Q-Oper8 -- Scalable multi-process manager for Node.js
* "solder":https://github.com/brettstimmerman/solder -- Combines and minifies JavaScript and CSS at runtime and build time
* "fugue":https://github.com/pgte/fugue -- Unicorn for Node.js - Multiple node server instance manager with Unicorn-like features
* "what":https://github.com/entmike/what -- What - A Node.JS Web Container/Application Server
* "mongrel2":https://github.com/darkhelmet/node-mongrel2 -- mongrel2 - Mongrel2 handler for node
* "node-flags":https://github.com/dpup/node-flags -- node-flags - Flag handling library
* "zen":https://github.com/pblabs/zen -- Robust high performance middleware engine
* "js2":https://github.com/jeffsu/js2 -- Syntactic Sugar and Object Oriented Javascript
<a name="wiki-database"></a>

h3(#database). "Database":#database

h4(#db-mssql). "SQL Server":#db-mssql

* "node-mssql":https://github.com/vivina/node-mssql -- A node.js MS SQL Server native driver 

h4(#db-pg). "Postgresql":#db-pg

* "node_postgres":https://github.com/ry/node_postgres -- Beginning of bindings to libpg
* "node-postgres":https://github.com/brianc/node-postgres -- Well tested libpq binding and pure javascript PostgreSQL client
* "FastLegS":https://github.com/didit-tech/FastLegS - PostgreSQL ORM on top of node-postgres.
* "postgres-js":https://github.com/creationix/postgres-js/tree/master -- Postgres protocol implemented in pure JS
* "postgres-js":https://github.com/aurynn/postgres-js/ -- Fork of postgres-js, adds parameterized queries and prepared statements.

h4(#db-mysql). "MySQL":#db-mysql

* "db-mysql":https://github.com/mariano/node-db-mysql/ - Binary driver for MySQL (using libmysql). Part of the "Node.js DB":http://nodejsdb.org effort
* "node.dbslayer.js":https://github.com/Guille/node.dbslayer.js/ - Interface to DBSlayer (MySQL)
* "node-poormansmysql":https://github.com/mscdex/node-poormansmysql -- Asynchronous MySQL driver for node.js using the mysql command-line tool
* "node-mysql":https://github.com/felixge/node-mysql -- A node.js module implementing the MySQL protocol 
** "node-mysql-pool":https://github.com/Kijewski/node-mysql-pool -- connection pool for node.js on top of Felix Geisendörfer's MySQL client node-mysql.
** "node-mysql-cache":https://github.com/guggero/node-mysql-cache -- MySQL query cache for node.js on top of Felix Geisendörfer's MySQL client node-mysql.
* "-node-mysql-":https://github.com/masuidrive/node-mysql -- -Pure JavaScript MySQL async driver- [obsolete]
* "node-mysql-native":https://github.com/sidorares/nodejs-mysql-native -- Yet another pure JS async driver. Pipelining, prepared statements.
* "node-mysql-libmysqlclient":https://github.com/Sannis/node-mysql-libmysqlclient -- MySQL asynchronous bindings based on libmysqlclient
** "RDX":https://github.com/kreetitech/RDX - An object-relational mapper (ORM) for node. Backends: node-mysql-libmysqlclient.
* "node-handlersocket":https://github.com/koichik/node-handlersocket -- Pure JavaScript client for "HandlerSocket Plugin for MySQL":https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL. 
* "persistence.js":https://github.com/zefhemel/persistencejs -- An object-relational mapper (ORM) for node. Backends: MySQL.
* "sequelize":https://github.com/sdepold/sequelize - An easy-to-use MySQL Object-Relational-Mapper (ORM) for Node.JS
* "moose":https://github.com/Pollenware/moose - An ORM for node (Currently only MySQL). Based on node-mysql

h4(#db-sqllite). "Sql Lite":#db-sqllite

* "node-sqlite":https://github.com/grumdrig/node-sqlite -- Bindings for SQLite3. Interface conforms to the "HTML5 Web SQL API":http://dev.w3.org/html5/webdatabase/#sql.
* "node-sqlite":https://github.com/orlandov/node-sqlite -- Fast asynchronous driver: New evented Node.js look, same great SQLite3 taste
* "node-sqlite3":https://github.com/developmentseed/node-sqlite3 -- Full-featured, asynchronous SQLite bindings with query serialization/parallelization and verbose stack traces

h4(#db-nosql). "NoSQL and Key Value":#db-nosql

h5(#db-nosql-mongo). "Mongo":#db-nosql-mongo

* "node-mongodb":https://github.com/orlandov/node-mongodb -- Basic MongoDB client implementation in JS/C++
* "node-mongodb-native":https://github.com/christkv/node-mongodb-native -- A pure JavaScript driver for MongoDB.
** "node-mongoskin":https://github.com/guileen/node-mongoskin -- A future layer for node-mongodb-native.
** "node-mongodb-wrapper":https://github.com/idottv/node-mongodb-wrapper -- As close as possible to the command-line driver. Uses node-mongodb-native.
** "mongode":https://github.com/milewise/mongode -- Very thin wrapper around node-mongodb-native that simplifies the API a bit.
** "N-Ext":https://github.com/xcambar/n-ext -- Use Ext.data packages in your NodeJS apps (includes a MongoDB proxy based on "node-mongodb-native":https://github.com/xcambar/n-ext/node-mongodb-native)
** "mongoq":https://github.com/zzdhidden/mongoq -- MongoDB is: mongoq('mongodb://localhost/db').collection('users').find().toArray(function(error, docs){})
* "node-mongolian":https://github.com/marcello3d/node-mongolian -- Mongolian DeadBeef is an awesome Mongo DB node.js driver that attempts to closely approximate the mongodb shell
* "mongolia":https://github.com/masylum/mongolia -- Flexible wrapper for the nodejs Mongo driver. Lighter than a ORM but easier to use than the driver.
* "mongoose":http://mongoosejs.com/ -- Mongoose is a JavaScript library that makes working with MongoDB a breeze.
* "mongous":https://github.com/amark/mongous -- Mongous is a dead simple MongoDB driver that uses a jQuery styled syntax.
* "nosql-thin":https://github.com/dmcquay/node-nosql-thin - Makes easier to work with MongoDB. Not an ORM. Not production ready.
* "mongoclikker":https://github.com/semu/mongoclikker - Simple MongoDB data viewer

h5(#db-nosql-hive). "Hive":#db-nosql-hive

* "node-hive":https://github.com/forward/node-hive -- dead simple hive client using thrift api

h5(#db-nosql-redis). "Redis":#db-nosql-redis

* "redback":https://github.com/chriso/redback -- a high-level Redis library with support for advanced data structures such as Social Graphs and Full-text Indexes.
* "awesome":https://github.com/janl/awesome -- a Redis clone in node.js
* "nedis":https://github.com/visionmedia/nedis -- Redis server implementation written with node
* "redis-node":https://github.com/bnoguchi/redis-node -- Comprehensive, high speed Redis client
* "redis-node-client":https://github.com/fictorial/redis-node-client/tree/master -- Redis Client by Fictorial (deprecated)
* "node_redis":https://github.com/mranney/node_redis/ -- Complete Redis client that works well with new node and new Redis
* "redis2json":https://github.com/igo/redis2json/ -- Easily loads data from Redis into structured JS object
* "nohm":https://github.com/maritz/nohm -- Redis object relational mapper (ORM)

h5(#db-nosql-couch). "CouchDB":#db-nosql-couch

* "node-couchdb-api":http://dominicbarnes.us/node-couchdb-api/ -- An easy-to-use and powerful wrapper for the CouchDB API that follows Node.JS conventions for async code.
* "LazyBoy":http://garrensmith.com/LazyBoy -- a CouchDB ORM thats easy to use 
* "node-couch":https://github.com/sixtus/node-couch/tree/master -- a CouchDB connector
* "-node-couchdb-":https://github.com/felixge/node-couchdb -- -A full API implementation- [obsolete]
* "node-couchdb-min":https://github.com/rsms/node-couchdb-min -- Light-weight client with low level of abstraction and connection pooling.
* "couch-ar":https://github.com/scottburch/couch-ar -- a active record implementation for couchDB (uses cradle)
* "couch-client":https://github.com/creationix/couch-client -- a simple wrapper around CouchDB's http interface
* "PJsonCouch":https://github.com/landeiro/PJsonCouch -- PJs-on-Couch is a client lib for CouchDB's HTTP API
* "cradle":https://github.com/cloudhead/cradle -- a high-level, caching, CouchDB client
* "couchcmd":https://github.com/ssuda/node-couch-cmd -- CouchDB command line utility using cradle
* "data.js":https://github.com/michael/data/ -- Graph persistence for Node.js with CouchDB
* "couchtato":https://github.com/cliffano/couchtato/ -- CouchDB document utility tool
* "nano":https://github.com/dscape/nano/ -- Minimalistic driver for CouchDB based on mikeals/request

h5(#db-nosql-misc). "NoSQL Misc":#db-nosql-misc

* "riak-js":https://github.com/frank06/riak-js -- Riak JavaScript client (works on node v0.1.30+)
* "node-mwire":https://github.com/robtweed/node-mwire -- Client for GT.M & Cache databases
* "alfred":http://pgte.github.com/alfred/ -- a fast in-process key-value store for node.js that has functional indexes, streams, replication,  ...
* "barricane-db":https://github.com/chrisdew/barricane-db -- a transparent object persistence mechanism
* "chaos":https://github.com/stagas/chaos -- Chaos is a Node.js database
* "node-tokyocabinet":https://github.com/edvakf/node-tokyocabinet -- Tokyo Cabinet binding
* "node-tyrant":https://github.com/waveto/node-tyrant/tree/master -- An implementation of the Tokyo Tyrant network protocol for the Node.js
* "kyoto-client":https://github.com/wezm/kyoto-client -- A client for the Kyoto Tycoon key-value store
* "keys":https://github.com/visionmedia/keys -- Unified interface for key/value store clients
* "neo4j":https://github.com/gasi/node-neo4j -- Neo4j graph database driver for Node

h4(#db-misc). "DB Misc and Cross DB":#db-misc

* "db-drizzle":https://github.com/mariano/node-db-drizzle/ - Binary driver for Drizzle (using libdrizzle). Part of the "Node.js DB":http://nodejsdb.org effort
* "jugglingdb":https://github.com/1602/jugglingdb/ - ORM for every database: redis, mysql, neo4j, mongodb, ...
* "JSLINQ":https://github.com/marak/JSLINQ -- Clean and simple port of Microsoft's LINQ to node.js (and the browser)
* "nconf":https://github.com/indexzero/nconf -- A hybrid local / remote configuration storage library
* "node-cask":https://github.com/randomekek/node-cask -- A 140 loc mmap-ed key/value store, based on bitcask
* "node-dirty":https://github.com/felixge/node-dirty -- A key value store for node.js that is simple, fast & dirty.
* "node-fleet":https://github.com/jfd/node-fleet -- a FleetDB Client
* "node-firebird-libfbclient":https://github.com/xdenser/node-firebird-libfbclient -- Firebird SQL client
* "node-fsdocs":https://github.com/rsms/node-fsdocs -- Simple, ACID and versioned file system-based document database for quick hacks
* "node-hbase":https://github.com/wdavidw/node-hbase -- HBase client with full API support through the REST connector
* "node-mdbm":https://github.com/robtweed/node-mdbm -- a client for GT.M and Cache, using an HTTP interface that is based on SimpleDB
* "node-orm":https://github.com/dresende/node-orm -- ORM for multiple drivers (MySQL, PostgreSQL, MongoDB)
* "memcached":https://github.com/3rd-Eden/node-memcached -- Memcached, membase client with support for memcached clusters using consistent hashing.
* "node-memcache":https://github.com/vanillahsu/node-memcache -- a memcache client base on libmemcached
* "node-dbi":https://github.com/DrBenton/Node-DBI -- A database abstraction layer, which allows to work with several database engines (MySQL, SQLite) with a single handy API
* "node-tiny":https://github.com/chjj/node-tiny -- An experimental in-process database similar to nStore.
* "persistence":https://github.com/creationix/node-persistence -- Multi-backend database/nosql system.  Backends: Sqlite3, Postgres and Memory.
* "perstore":https://github.com/kriszyp/perstore -- JavaScript persistence/object store with pluggable storage based on the "W3C DB API":http://www.w3.org/TR/IndexedDB/
* "node-migrate":https://github.com/rsandor/node-migrate -- Migrate - A database agnostic migration system for Node.js
* "simpledb":https://github.com/rjrodger/simpledb -- An Amazon AWS SimpleDB library for Node.js that is user-friendly and fault-tolerant
* "node-mdb":https://github.com/robtweed/node-mdb -- Node.js-based clone of AWS SimpleDB, using GT.M for data storage
* "ueberDB":https://github.com/Pita/ueberDB -- Transforms every database into a object key value store
* "hive":https://github.com/Pollenware/hive -- Fast in memory store for Node.
<a name="wiki-templating"></a>
* "nocr-mongo":https://github.com/karacos/nocr-mongo -- "NoCR":https://github.com/NoCR/NoCR implementation for mongoDB
* "searchjs":https://github.com/deitch/searchjs -- Library for doing easy native JSON SQL-style querying on JS objects/arrays. Implements JSQL, native JSON query language. 

h3(#templating). "Templating":#templating
* "asyncEJS":https://github.com/cramforce/node-asyncEJS -- Asynchronous implementation of embedded JavaScript
* "bake":https://github.com/pvorb/node-bake -- Templating engine for static files. Supports "ejs":https://github.com/visionmedia/ejs templates.
* "bind-js":https://github.com/Xavi-/bind-js -- a simple templating engine for node.js that smiles back.
* "blue":http://github.com/floby/node-blue -- A streamed template engine. Support for asynchronous loading of partials
* "CoffeeKup":https://github.com/mauricemach/coffeekup -- Markup as CoffeeScript. Live "demo":http://coffeekup.org.
* "combyne.js":https://github.com/tbranyen/combyne.js -- A template engine that hopefully works the way you'd expect.
* "doT.js":https://github.com/olado/doT -- Concise and super fast javascript templates with customizable delimiters, streaming and partials support
* "dust":http://akdubya.github.com/dustjs -- Async, streaming & composable templates for the browser and node
* "Eco":https://github.com/sstephenson/eco -- Embedded CoffeeScript templates
* "ejs":https://github.com/visionmedia/ejs -- Light-weight Embedded JavaScript implementation. "Express":http://expressjs.com compliant
* "haml.js":https://github.com/visionmedia/haml.js -- Faster / more compliant implementation of Haml. "Express":http://expressjs.com support
* "haml-js":https://github.com/creationix/haml-js -- Server side html generation using JavaScript.  Parses haml templates and renders html.
* "jshtml":https://github.com/LuvDaSun/jshtml -- Clean HTML, full JavaScript template engine. Inspired by the razor view engine used in asp.net mvc.
* "jqtpl":https://github.com/kof/node-jqtpl -- A port of the new jQuery template engine. "Express":http://expressjs.com compliant
* "Jade":https://github.com/visionmedia/jade -- Haml-like template engine, fantastic error reporting, easier to read, higher performance. "Express":http://expressjs.com compliant
* "jazz":https://github.com/shinetech/jazz -- A readable template language for node.
* "JinJS":http://code.ravelsoft.com/node-jinjs -- A port of Jinja, a Django Template-like templating language to Javascript
* "JSON Template":https://github.com/andychu/json-template -- Minimal but powerful template language with multiple implementations.  This is the CommonJS version, tested on Node
* "jm":https://github.com/smtlaissezfaire/jm -- Another Builder/Markaby/Erectory clone in JavaScript.
* "jsdom":https://github.com/tmpvar/jsdom -- pure js implementation of the dom level 1 with some browser augmentation. Level 2 and 3 are being considered.
* "less.js":https://github.com/cloudhead/less.js -- official port of Less to JavaScript/node.
rendering process.
* "Liquor":https://github.com/chjj/liquor -- A templating engine minus the code.
* "minimal.js":https://github.com/ruidlopes/minimal.js -- a fast HTML+JSON template engine (both browser and Node.js compatible)
* "Mu (Mustache)":https://github.com/raycmorgan/Mu -- A Mustache engine that compiles templates into very fast rendering functions. Also streams the 
* "nTPL":https://github.com/indutny/nTPL -- Fast & Native extendable template system
* "nodejs-meta-templates":https://github.com/shimondoodkin/nodejs-meta-templates -- like php mixed with html, processed twice, 1st  static data, 2nd dynamic data.
* "normal-template":https://github.com/gmosx/normal-template -- Normal templates are simple, yet powerful. They are safe, usable in non XML/HTML contexts and portable to any programming language.
* "nun":https://github.com/akaspin/nun -- Totally asynchronous non-blocking template engine for node.js
* "node.magic_dom":https://github.com/amix/node.magic_dom -- A DSL for building HTML in node.js, similar to Python's Stan
* "node-template":https://github.com/graphnode/node-template -- Fast and light cached templates.
* "node-properties":https://github.com/theteam/node-properties -- Simple property reader, externalise your configuration through JSON
* "Parrot":https://github.com/ollym/parrot -- A lightning fast and lightweight templating engine for Node.js (Just 33 LOC!)
* "PURE":https://github.com/pure/pure -- Unobtrusive Rendering Engine. The HTML view and the JS logic remain strictly separated. Works with jsdom.
* "stencil":https://github.com/thetalecrafter/stencil -- Renders asynchronous templates shared by server and browser
* "Node-T":https://github.com/skid/node-t -- A fast django-like templating engine for node.js
* "Swig":https://github.com/paularmstrong/swig -- Fast and powerful Django-style templates for node.js
* "Templ8":https://github.com/constantology/Templ8 -- A fast, lightweight, yet powerful & feature rich client/ server template engine based on Django style syntax
* "template.node.js":https://github.com/jazzychad/template.node.js -- A light, fast, cached template module for node.
* "tmpl-node":https://github.com/jed/tmpl-node -- a feature-rich template module for node.js
* "TwigJS":https://github.com/fadrizul/twigjs -- A port of PHP template engine ("www.twig-project.org":http://www.twig-project.org) to Javascript
* "weld":https://github.com/hij1nx/weld -- unobtrusive. portable. ANTI-TEMPLATING. Weld binds data to markup, and can generate markup based on your data.
* "xmlbuilder.js":https://github.com/btakita/xmlbuilder.js -- An xml builder in JavaScript inspired by Ruby's Builder, Markaby, and Erector.
* "xmlbuilder-js":https://github.com/oozcitak/xmlbuilder-js -- An xml builder for node.js similar to java-xmlbuilder.
* "node-tmpl":https://github.com/jeromeetienne/node-tmpl -- basic templating system in node.js based on shorttag
* "tob":https://github.com/shimondoodkin/tob -- Template Observer, allows self-reloading templates with your template engine

<a name="wiki-css-engines"></a>

h3(#css-engines). "CSS Engines":#css-engines
* "Stylus":https://github.com/LearnBoost/stylus -- Expressive, dynamic, robust CSS language written by the author of Express, Connect, Jade and more
* "Stylus-Sprite":https://github.com/andris9/stylus-sprite -- Extension for Stylus to generate sprite images
* "sass.js":https://github.com/visionmedia/sass.js -- Parses Sass templates and renders css.
* "scss-js":https://github.com/bmavity/scss-js -- Parses SCSS templates and renders css.
* "carto":https://github.com/mapbox/carto -- Parses MSS templates and renders XML for "Mapnik":http://mapnik.org/
* "ccss":https://github.com/aeosynth/ccss -- Parses a JavaScript object and renders css.
* "less":https://github.com/cloudhead/less.js -- Parses a LESS template and renders css.
* "csslike":https://github.com/chjj/csslike -- Parses and compiles CSS, taking into account the most recent www-style proposals.

<a name="wiki-content-management"></a>

h3(#content-management). "Content Management Systems":#content-management
* "Nodepad":https://github.com/alexyoung/nodepad -- A nice basic web-based notepad.
* "Calipso":http://calip.so/?utm_source=nodejs&utm_medium=github&utm_campaign=nodejs -- An express based CMS, very much work in progress.
* "Murray CMS":https://github.com/thecolorblue/murray-cms -- blog platform using express and mongodb.
* "DocPad":https://github.com/balupton/docpad -- a static website generator which supports markdown and eco among others
* "FilePad":https://github.com/balupton/filepad - edit your local files collaboratively in realtime inside the browser, can be used "in conjunction with DocPad":https://github.com/balupton/docpad/wiki/Tips-&-Tricks
* "NoCR":https://github.com/NoCR/NoCR - JCR-inspired Content Repository API for Node.js which maps your content model to a tree of nodes and properties. There is a "MongoDB NoCR provider":https://github.com/karacos/nocr-mongo available
* "reed":https://github.com/ProjectMoon/reed - A Markdown-based blogging core backed by Redis and the filesystem.

<a name="wiki-build-and-deployment"></a>

h3(#build-and-deployment). "Build and Deployment":#build-and-deployment
* "asereje":https://github.com/masylum/asereje -- Bundles and minifies your javascript and css files on demand. Forget about builds, hard deploys and cache forever.
* "dev":https://github.com/iliakan/node-dev -- Automatically restarts the app when a source-file is modified. Autohooks on new files, so it doesn't need manual restart at all.
* "forever":https://github.com/indexzero/forever -- A simple CLI tool for ensuring that a given script runs continuously (i.e. forever)
* "haibu":https://github.com/nodejitsu/haibu -- a node.js application server - spawn your own node.js clouds, on your own hardware
* "jitsu":https://github.com/nodejitsu/jitsu -- Flawless command line deployment of your Node.js apps to the cloud
* "nodejs-autorestart":https://github.com/shimondoodkin/nodejs-autorestart -- It is a way to watch all .js files if they have been changed and to restart nodejs. It allows easy development and stable production.
* "config":https://github.com/lorenwest/node-config -- Configuration control for production node deployments - npm install config
* "node-config":https://github.com/ArtS/node-config -- Lightweight configuration engine for Node.js
* "node-dev":https://github.com/fgnass/node-dev -- Automatically restarts node when a source-file is modified. Displays notifications via Growl.
* "octoploy":https://github.com/ammmir/octoploy -- GitHub post-receive hook URL handler (execute script on push to repo)
* "run":https://github.com/DTrejo/run.js -- Rerun your js file whenever there's a change in the current directory: <code>npm install -g run</code>, <code>runjs yourcode.js</code>. Never alt-tab to your terminal again.
* "node-settings":https://github.com/mgutz/node-settings -- Simple, hierarchical environment-based app settings.
* "Jake":https://github.com/mde/jake -- JavaScript build tool similar to Make or Rake.
* "muffin.js":https://github.com/hornairs/muffin -- CoffeeScript compilation, minification, concatenation, copying, growl, and SLOC counting helpers for Cakefiles.
* "Masson":https://github.com/wdavidw/node-masson -- Build system and rule management similar to tools like Make, Ant or Rake
* "Ready.js":https://github.com/dsimard/ready.js -- Continuous JavaScript integration using JSLint, Google Compiler, Node.js and Git
* "autolint":https://github.com/magnars/autolint -- Autolint watches your files for jslint/jshint-errors.
* "ripple":https://github.com/thrashaholic/ripple -- Dynamic runtime configuration for node.js deployment based on lorenwest's config.
* "nodemon":https://github.com/remy/nodemon -- Monitors all source files, restarts node on changes. Command-line usage, code-passive with ignore list.
* "node-linter":https://github.com/kof/node-linter -- generic lint wrapper for JSLint, closure-linter, closure-compiler, and JavaScript Lint.
* "nib.js":https://github.com/blambeau/nib.js -- package and minify JavaScript/coffeescript projects to be embedded in the browser as a single .js file 
* "nclosure":http://gatapia.github.com/nclosure/ -- Compiler, Style Checker, Utility Library, Unit Testing Framework, JSDoc Documentation Tool.  Built on top of Google Closure tools.
* "quickcheck":https://github.com/mcandre/node-quickcheck -- Port of the Haskell QuickCheck unit testing framework
* "buildr":https://github.com/balupton/buildr.npm -- Javascript Project Builder, Compresses Images, CSS and JS, Bundles CSS and JS, Checks Javascript, Supports SubPackages/Plugins
* "poly.shell":https://github.com/dvidelabs/poly.shell -- distributed shell job control with role based configuration
* "inireader":https://github.com/Ajnasz/IniReader -- Ini file parser
* "doc.md":https://github.com/Pita/doc.md -- A simple JSDoc documenation tool that creates markdown for node.js modules
* "coffee-conf":https://github.com/MSNexploder/coffee-conf -- Write your config files in coffee-script.
* "Gittyup":https://github.com/spiceapps/gittyup -- Application deployment library for node.js
* "npkg":https://github.com/wearefractal/npkg -- Generates cross-platform installers for Node.js applications
* "envious":https://github.com/markbao/node-envious -- environment variable configuration that's too easy to pass up

<a name="wiki-package-management"></a>

h3(#package-management). "Package Management Systems":#package-management
* "npm":https://github.com/isaacs/npm -- A node package manager that uses CommonJS-compatible package.json files, written in asynchronous JavaScript.
* "nmod":https://github.com/jeromeetienne/nmod -- nmod is a node_modules manager. able to install from npm and git
* "Ender":https://github.com/ender-js/ender -- A package manager built on NPM bringing micro to macro to create your own custom JavaScript library by composing modules into a cohesive and familiar interface .
* "Slugr":https://github.com/spiceapps/slugr -- Wraps node.js apps into a single executable file.
* "npkg":https://github.com/wearefractal/npkg -- Generates cross-platform installers/executables for Node.js applications

<a name="wiki-module-loader"></a>

h3(#module-loader). "Module Loader":#module-loader
* "nodules":https://github.com/kriszyp/nodules -- Async URL CommonJS module loader with dep resolution/downloading and hot-module reloading
* "node-DJs":https://github.com/louisremi/node-DJs - Restart a server after each change in main script and dependencies
* "node-hot-reload":https://github.com/shimondoodkin/node-hot-reload - watchFile and reload modules dynamically for node.js (very useful for development, less good for production)
* "remap":https://github.com/dominictarr/remap - reroute require for mocks, wrappers, or shenanigans (useful for testing)

<a name="wiki-security"></a>

h3(#security). "OpenSSL / Crypto / Hashing":#security
* "node-gpg":https://github.com/drudge/node-gpg 
* "node-hashring":https://github.com/3rd-Eden/node-hashring -- Hash ring provides consistent hashing based on the libketema library.
* "packnode":https://github.com/chriso/packnode -- Obfuscate, minify and/or encrypt JS files
* "hashlib":https://github.com/brainfucker/hashlib -- Fast hashing module, written in C/C++, supports: md4, md5, md6, sha, sha1, sha256, sha512
* "keygrip":https://github.com/jed/keygrip -- Key signing and verification for rotated credentials
* "brainfucker's node-base64":https://github.com/brainfucker/node-base64 -- C++ base64 lib
* "pkrumins's node-base64":https://github.com/pkrumins/node-base64 -- C++ base64 lib that actually works
* "amir's node-base62":https://github.com/amir/node-base62 -- C++ base62 lib for representing big numbers
* "node.bcrypt.js":https://github.com/ncb000gt/node.bcrypt.js -- C/C++ bcrypt lib
* "node-crypto":https://github.com/waveto/node-crypto -- OpenSSL based Hashing, Signing and Verifying
* "node-oauth":https://github.com/ciaranj/node-oauth -- OAuth client (1 and 2)
* "oauthjs":https://github.com/itea/oauthjs -- OAuth client
* "oauth-server":https://github.com/selead/oauth-server -- OAuth server (1.0A)
* "node-oauth2-provider":https://github.com/ammmir/node-oauth2-provider -- OAuth 2 provider as Connect/Express middleware with custom token storage hooks
* "node-openid":https://github.com/havard/node-openid -- OpenID 1.1/2.0 Relying Party (client)
* "pass":https://github.com/andris9/pass -- Validate/generate Apache htpasswd passwords (for Basic Auth)
* "rbytes":https://github.com/akdubya/rbytes -- Secure random byte generator for session keys, UUIDs, etc.
* "sasljs":https://github.com/nikhilm/sasljs -- "Gsasl":http://www.gnu.org/software/gsasl/ wrapper to performs server-side SASL authentication.
* "node-whirlpool":https://github.com/Sembiance/node-whirlpool -- C/C++ mhash lib wrapper providing whirlpool hash support
* "NodeJS-Keychain":https://github.com/aschlosberg/NodeJS-Keychain -- A security-oriented keychain web service
* "node_nibbler":https://github.com/mattrobenolt/node_nibbler -- Base32/base64 encoder/decoder.
* "node-cityhash":https://github.com/fbzhong/node-cityhash -- NodeJS bindings for "Google CityHash":http://code.google.com/p/cityhash/ , both CityHash64 and CityHash128 are supported.
* "node-phpass":https://github.com/jhurliman/node-phpass -- A pure JavaScript port of the portable PHP password hashing framework.
* "node-sechash":https://github.com/kbjr/node-sechash -- Secure password hashing using salt and key stretching.
* "murmurhash3":https://github.com/hideo55/node-murmurhash3 -- Node.js bindings for "MurmurHash3":http://code.google.com/p/smhasher/wiki/MurmurHash3

<a name="wiki-smtp"></a>

h3(#smtp). "SMTP":#smtp
* "Haraka":https://github.com/baudehlo/Haraka -- Full Featured SMTP Server
* "node-smtpclient":https://github.com/sleeplessinc/node-smtpclient -- Simple SMTP that uses AUTH and TLS/SSL (2.4)
* "node-smtp-client":https://github.com/miksago/node-smtp-client -- Implementation of the SMTP protocol in Node
* "node-smtp":https://github.com/aredridel/node-smtp -- Implementation of an SMTP server (and soon, client)
* "node_mailer":https://github.com/marak/node_mailer -- send emails from node.js to an smtp server, simple as cake 
* "Nodemailer":https://github.com/andris9/Nodemailer - Easy to use module to send e-mails with Node.JS, unicode friendly
* "emailjs":https://github.com/eleith/emailjs - send emails, html and attachments from node.js to any smtp server (ex: gmail)
* "node-smtpevent":https://github.com/euangoddard/node-smtpevent -- Event based SMTP server

<a name="wiki-tcp"></a>

h3(#tcp). "TCP / IP":#tcp
* "node-httpclient":https://github.com/billywhizz/node-httpclient -- Node HTTP Client (gzip, https, cookies etc.)
* "node-imap":https://github.com/mscdex/node-imap -- A module for interacting with IMAP mail servers
* "jsftp":https://github.com/sergi/jsftp -- A sane, light and concise client implementation of the FTP protocol
* "node-ftp":https://github.com/mscdex/node-ftp -- An FTP client module for node.js
* "ftp-get":https://github.com/SaltwaterC/ftp-get -- Simple to use node.js FTP client for downloading remote files
* "node-nntp":https://github.com/mscdex/node-nntp -- An NNTP (usenet/newsgroups) client module for node.js
* "NodeFTPd":https://github.com/billywhizz/nodeftpd -- Node FTP Server
* "node-ftpclient":https://github.com/seanhess/node-ftpclient -- Node FTP Client
* "node-get":https://github.com/tmcw/node-get -- Moderately higher-level HTTP client library.
* "xmpp.js":http://xmppjs.prosody.im/ -- Library for implementing XMPP server components with Node
* "node-digest":https://github.com/wearefractal/node-digest -- HTTP Digest authentication for NodeJS
* "node-http-status":https://github.com/wdavidw/node-http-status -- Interact with HTTP status code (just a set of constants)
* "request":https://github.com/mikeal/request -- Simple HTTP client library.
* "open-uri":https://github.com/publicclass/open-uri -- A very simple HTTP(S)/FTP client library similar to Rubys Open-URI lib.
* "superagent":https://github.com/visionmedia/superagent -- High-level HTTP client sporting a progressive API
* "node-xmpp":https://github.com/astro/node-xmpp -- Node XMPP library
* "node-simple-xmpp":https://github.com/arunoda/node-simple-xmpp -- Simple High Level NodeJS XMPP Client
* "node-snpp":https://github.com/jsanders/node-snpp -- Node SNPP server library
* "mdns":https://github.com/agnat/node_mdns -- mdns/zeroconf/bonjour service discovery add-on
* "macaddr":https://github.com/carter-thaxton/macaddr -- Obtain MAC addresses for current machine from Node
* "n3":https://github.com/andris9/n3 -- Experimental POP3 server to send arbitrary data to e-mail clients (including e-mails)
* "node-icecast-stack":https://github.com/TooTallNate/node-icecast-stack -- An interface for connecting to, parsing metadata, and reading from SHOUTcast/Icecast radio streams
* "ndns":https://github.com/jsjohnst/ndns -- DNS client/server library
* "jsDAV":https://github.com/mikedeboer/jsdav -- jsDAV allows you to easily add WebDAV and CalDAV support to a NodeJS application. jsDAV is meant to cover the entire standard, and attempts to allow integration using an easy to understand API.
* "wake_on_lan":https://github.com/agnat/node_wake_on_lan -- Generate and send Wake-on-LAN magic packets
* "node-tld":https://github.com/donpark/node-tld -- for working with TLD data (registered domain name, etc)
* "NodeSSH":https://github.com/FlashFan/NodeSSH -- a lightweight SSH client
* "node-xmpp-bosh":http://code.google.com/p/node-xmpp-bosh/ -- An XMPP BOSH server running on node.js
* "node-snmp":https://github.com/huancz/node-snmp/ -- SNMP v1 client
* "node-socksified":https://github.com/vially/node-socksified -- HTTP SOCKS5 proxy support
* "http-sync":https://github.com/dhruvbird/http-sync -- Synchronous http(s) client
* "http-get":https://github.com/SaltwaterC/http-get -- Simple to use node.js HTTP / HTTPS client for downloading remote files. Supports transparent gzip decoding.
* "portscanner":https://github.com/baalexander/node-portscanner -- An asynchronous port scanner for Node.js
* "node-poplib":https://github.com/ditesh/node-poplib -- POP3 client library for Node.js

h3(#rpc). "RPC":#rpc
* "rpc-socket":https://github.com/FLYBYME/rpc-socket -- Multi socket support for JSON-RPC NOTE: still under development.
* "bertrpc":https://github.com/rtomayko/node-bertrpc
* "jsonrpc":https://github.com/ericflo/node-jsonrpc
* "xmlrpc":https://github.com/baalexander/node-xmlrpc -- A pure JavaScript XML-RPC server and client
* "dnode":https://github.com/substack/dnode -- Asynchronous remote method calls with transparently wrapped callbacks. Works with regular network streams or socket.io.
* "node-jsonrpc":https://github.com/andris9/node-jsonrpc -- Another JSON-RPC server
* "jsonrpc2":https://github.com/Philipp15b/node-jsonrpc2 -- A super easy to use JSON-RPC v2 server
* "IPCNode":https://github.com/Frans-Willem/IPCNode -- Asynchronous RPC library based on node.js Stream object,  with support for circular objects, and explicit reference counting to ensure proper garbage collection.
* "msgpack-rpc":https://github.com/bpot/node-msgpack-rpc -- Implementation of Msgpack-RPC (http://msgpack.org)
* "node-ipcbuffer":https://github.com/dazhazit/node-ipcbuffer -- A modified Buffer object to pass large amounts of data between processes using POSIX or System V IPC shared memory and or do fast read and writes to files. (Windows soon).
* "node-pingback":https://github.com/chjj/node-pingback -- Pingbacks for node.js, conforming to the pingback and xml-rpc spec.
* "node-soap":https://github.com/milewise/node-soap -- SOAP client and service (partial support).
* "nodejs-light_rpc":https://github.com/romulka/nodejs-light_rpc -- Simple server/client RPC, with minimal dependencies (uuid (can be removed to use simple increment)).
* "zeromq.node":https://github.com/JustinTulloss/zeromq.node -- 0MQ (zeroMQ) bindings for node.js

<a name="wiki-ws-ajax"></a>

h3(#ws-ajax). "Web Sockets & Ajax":#ws-ajax
* "Abstract HTTP Request":https://github.com/coolaj86/abstract-http-request -- An HTTP Client wrapper for the browser (XHR) and node.js (http module)
* "Comet LongPollingBuffer":https://github.com/robrighter/Long-Polling-Buffer -- A Library to simplify the server side of Comet AJAX long polling
* "Faye":https://github.com/jcoglan/faye -- Bayeux protocol Comet client and server for Node.js and Rack
* "Minotaur":https://github.com/yojimbo87/minotaur -- Long poll server using JSONP communication with clients
* "Socket.io":https://github.com/LearnBoost/Socket.IO -- WebSocket-compatible server and client with fallback for legacy browsers
* "node-rpc-socket.io":https://github.com/Tronix117/node-rpc-socket.io -- socket.io addon, add a full client/server implementation of JSON-RPC
* "node-socket.io-client":https://github.com/saschagehlich/node-socket.io-client -- Node.js implementation of the Socket.IO client libraries
* "node-XMLHttpRequest":https://github.com/driverdan/node-XMLHttpRequest
* "node.websocket.js":https://github.com/Guille/node.websocket.js -- WebSocket-compatible server.
* "node.ws.js":https://github.com/ncr/node.ws.js -- A basic Web Socket server with interface similar to tcp.createServer(...)
* "nodejs-http-websocket":https://github.com/zimbatm/nodejs-http-websocket -- A websocket server on top of the http server.
* "node-websocket-server":https://github.com/miksago/node-websocket-server -- Another websocket server on top of the http server.
* "Restler":https://github.com/danwrong/restler -- Simplified REST client for Node.js
* "node-websocket-client":https://github.com/pgriess/node-websocket-client -- An HTML5 Web Socket client.
* "node2node-socket.io":https://github.com/dotmaster/node2node-socket.io -- A node2node transport and client for socket.io .
* "Reston":https://github.com/maxpert/Reston -- REST client with multipart support and friendly API
* "tunguska":https://github.com/kriszyp/tunguska -- A comet publish/subscribe distributed hub (runs across multiple node instances).
* "grappler":https://github.com/mscdex/grappler -- A minimalistic server for handling "comet" connections that supports a variety of connection methods.
* "spacesocket":https://github.com/astro/spacesocket -- WebSocket server not invented here
* "Weasel":https://github.com/hackfrag/Weasel -- a command based websocket application framework
* "node-wwwdude":https://github.com/pfleidi/node-wwwdude -- A simplified, flexible HTTP/REST client library for node.js
* "node-bus":https://github.com/node-bus/node-bus -- A distributed pubsub engine for JSON-based events
* "wave-node":https://github.com/scottbw/wave-node -- An implementation of the Google Wave Gadget API for node.js
* "node-object-sync":https://github.com/jonashuckestein/node-object-sync -- Transparently synchronize objects across connected clients
* "easywebsocket":https://github.com/jeromeetienne/EasyWebsocket -- WebSocket to broadcast messages to webpages
* "websocket-node":https://github.com/Worlize/WebSocket-Node -- A WebSocket library that tracks the latest protocol draft versions released by the IETF HyBi working group, currently protocol version 8 (draft -08, -09, and -10).  Mainstream browsers do not yet support this draft of the protocol.
* "Beseda":https://github.com/geometria-lab/Beseda -- Fast, well designed and featured Node.js Pub/Sub server. Beseda offers multiple platform API to develop realtime web applications.
* "node-eventstream":https://github.com/kbjr/node-eventstream -- A server-side companion to EventSource.

<a name="wiki-message-queue"></a>

h3(#message-queue). "Message Queues":#message-queue
* "gearman-node":https://github.com/cramerdev/gearman-node -- "Gearman":http://gearman.org/ client.
* "gearnode":https://github.com/andris9/gearnode -- "Gearman":http://gearman.org/ client and worker.
* "websocket.MQ":https://github.com/networkimprov/websocket.MQ -- Reliable message queue server accessible via websockets, socket.IO, etc
* "Wormhole":https://github.com/aikar/wormhole -- Fast/High Performance message queue system using streaming deserialization with the MessagePack format.
* "rabbit.js":https://github.com/squaremo/rabbit.js -- Idiomatic messaging using RabbitMQ from node.js

<a name="wiki-class-system"></a>

h3(#class-system). "Class systems":#class-system
* "joose":https://github.com/joose/joose -- complete modern class system for JavaScript, based on concepts from many programming languages
* "Klass":https://github.com/kitgoncharov/klass -- An expressive, cross platform JavaScript Class provider with a slick, classical interface to prototypal inheritance. Includes extends, implements, and the ability to call super classes/methods
* "mootools.js":https://github.com/stanislavfeldman/mootools.js -- MooTools latest server library as npm package for node.js
* "class-js":https://github.com/bnoguchi/class-js -- Simple, Light-weight OO Class factory
* "Sslac":https://github.com/jakobo/sslac -- Basic OOP-like support in JavaScript using chaining. Supports extension, interfaces, namespacing, and static objects.
* "comb":https://github.com/Pollenware/comb -- Library with a built in OO class system, and other features(datastructures, array string and date utilities, etc..).
* "JS.Class":https://github.com/daffl/JS.Class -- A class framework based on John Resig's Simple JavaScript inheritance and JavaScriptMVC $.Class.
* "Structr":https://github.com/spiceapps/structr -- Library built to give JavaScript the same look and feel as other popular languages such as Java. 
* "N-Ext":https://github.com/xcambar/n-ext -- Use the power of the Ext.data packages (from the ExtJS framework) in your NodeJS apps. Includes a MongoDB proxy based on "node-mongodb-native":https://github.com/xcambar/n-ext/node-mongodb-native)

<a name="wiki-testing"></a>

h3(#testing). "Testing / Spec Frameworks":#testing
* "API Easy":http://indexzero.github.com/api-easy/ -- Fluent (chainable) syntax for generating Vows tests against any RESTful API. 
* "Benchmark.js":https://github.com/mathiasbynens/Benchmark.js -- A benchmarking library that works on nearly all JavaScript platforms, supports high-resolution timers, and returns statistically significant results.
* "Cucumber":https://github.com/cucumber/cucumber-js -- The official JavaScript implementation of the well-known BDD tool. Runs both on Node.js and browsers.
* "cucumis":https://github.com/noblesamurai/cucumis -- A "cucumber nodejs":https://github.com/noblesamurai/cucumis implementation. Run plain text gherkin stories with full asynchronous support in native node.js JavaScript.
* "Cup of Tea?":https://github.com/refractalize/cupoftea -- BBD-style Unit Testing for Async apps.
* "databasecleaner":https://github.com/emerleite/node-database-cleaner -- Clean your database after each test. Supports MongoDB, Redis and CouchDB. Will support MySQL and others.
* "ensure":https://github.com/dscape/ensure -- nodejs testing made easy with vows or node-tap
* "Gently":https://github.com/felixge/node-gently -- A node.js module that helps with mocking and behavior verification.
* "espionage":https://github.com/smtlaissezfaire/espionage -- A mock/stub framework using the test spy pattern.
* "expresso":https://github.com/visionmedia/expresso -- TDD framework by the author of "JSpec":http://jspec.info
* "exemplor.js":https://github.com/chrislloyd/exemplor.js -- A port of "exemplor":https://github.com/quackingduck/exemplor with Node goodness.
* "foounit":https://github.com/foobarfighter/foounit -- client/server side BDD testing framework 
* "httpmock":https://github.com/bbyars/httpmock -- A RESTful web API for stubbing out network dependencies.
* "horaa":https://github.com/arunoda/horaa -- Mocking NodeJS Modules
* "jasmine-node":https://github.com/mhevery/jasmine-node -- integration with "Pivotal's Jasmine Spec":https://github.com/pivotal/jasmine framework
* "Jody":https://github.com/garrensmith/Jody -- A descriptive BDD Testing framework 
* "JUTE":https://github.com/zzo/JUTE -- A JS testing environment with built in code coverage support for Capture/Selenium/V8 backends
* "jspec":https://github.com/visionmedia/jspec -- Feature Rich BDD Testing Framework (no longer supported)
* "kyuri":https://github.com/nodejitsu/kyuri -- A node.js cucumber implementation with a few extra asynchronous keywords. supports 160+ languages and exports to VowsJS stubs
* "maryjane":https://github.com/dhasenan/maryjane/ -- Mock object library inspired by Mockito
* "minitest.js":https://github.com/botanicus/minitest.js -- Light-weight & simple testing framework designed specially for testing asynchronous code.
* "mjsunit.runner":https://github.com/tmpvar/mjsunit.runner -- Command line mjsunit runner which provides an easy way to hook into mjsunit and start running tests immediately.
* "nock":https://github.com/pgte/nock -- HTTP mocking and expectations library.
* "node-assert-extras":http://gitorious.org/node-assert-extras -- Additional high level asserts
* "node-async-testing":http://bentomas.github.com/node-async-testing/ -- Simple, fast, extendable unit testing.  
* "node-qunit":https://github.com/kof/node-qunit -- QUnit port for nodejs. Very simple API, async testing, good tested testing framework.
* "node-stories":https://github.com/tobiassvn/node-stories -- Given/When/Then integration awesomeness for Node.
* "nodemock":https://github.com/arunoda/nodemock -- Simple Yet Powerful Mocking Framework for NodeJs
* "nodeunit":https://github.com/caolan/nodeunit -- Simple syntax, powerful tools. Based on the assert module. Available for node.js and the browser!
* "patr":https://github.com/kriszyp/patr -- Promise-based asynchronous test runner: lightweight & simple.
* "pit":https://github.com/akaspin/pit -- Simple drop-in test runner with optional control tools
* "reut":https://github.com/5long/reut -- Heavyweight unit testing framework.
* "should":https://github.com/visionmedia/should.js -- expressive test framework agnostic BDD-style assertions
* "sinon":https://github.com/cjohansen/sinon.js -- JavaScript test spies, stubs and mocks for Node.js and the browser
* "spectacular":https://github.com/jcrosby/spectacular -- for testing
* "soda-runner":https://github.com/doug-martin/soda-runner -- Provides a command line interface, runner, and selenium ide adapter for for soda.
* "Speks":https://github.com/ecavazos/speks -- A specification framework for your node-code
* "TestIt":http://github.com/DouglasMeyer/test_it -- Light-weight yet complete, shoulda style testing framework for in-browser and node.js tests.
* "TestNode":http://github.com/testnode/testnode -- Unobtrusive BDD-style testing framework
* "testosterone":https://github.com/masylum/testosterone -- Virile testing for http servers or any nodejs application.
* "twerp":https://github.com/philjackson/twerp -- Simple test framework which is suited to Coffeescript users. Synchronous, simple and easy. 
* "uubench":https://github.com/akdubya/uubench -- A tiny asynchronous JavaScript benchmarking library
* "vbench":https://github.com/visionmedia/vbench -- tiny visual benchmarking library powered by uubench and node-canvas
* "Vows":https://github.com/cloudhead/vows -- asynchronous behaviour-driven development for node.js 
* "zap":https://github.com/nornagon/node-zap -- a tiny testing tool for node.js
* "zombie.js":https://github.com/assaf/zombie -- Insanely fast, full-stack, headless testing using node.js
* "node-testy":https://github.com/leetreveil/node-testy -- Super simple testing script. No added sugar. 100~ LOC.

<a name="wiki-wrappers"></a>

h3(#wrappers). "Wrappers":#wrappers
* "bdog-node":https://github.com/blackdog66/bdog-node -- haXe wrappers for node.
* "bdog-redis":https://github.com/blackdog66/bdog-redis -- haXe wrappers for Fictorial's redis client
* "bdog-gtk":https://github.com/blackdog66/bdog-gtk -- haXe wrappers for node and Gtk-Server
* "bdog-pstore":https://github.com/blackdog66/bdog-pstore -- haXe object server using bdog-node and bdog-redis
* "bdog-mongo":https://github.com/blackdog66/bdog-mongo -- haXe wrappers for native-mongo driver
* "SQLiteHaxeWrapper":https://github.com/tommedema/NodeSQLiteHaxeWrapper -- haXe wrappers for Orlandov's SQLite high level driver
* "hxnodejs":https://github.com/tong/hxnodejs -- another haXe wrappers for node



<a name="wiki-parsers"></a>

h3(#parsers). "Parsers":#parsers

<a name="wiki-parsers-json"></a>

h4(#parsers). "JSON":#parsers-json
* "JSON.js":http://www.json.org/js.html -- easy to use but synchronous, built-in to V8 (no need to @require@)
* "benejson":https://github.com/codehero/benejson -- Includes pure JavaScript incremental JSON parser
* "json-streams":http://github.com/floby/node-json-streams -- Streamed JSON parser and stringifier
* "node-yajl":http://github.com/vibornoff/node-yajl -- SAX-like evented JSON stream parser using "yajl":http://lloyd.github.com/yajl version 2 (fork of "yajl-js":http://bitbucket.org/nikhilm/yajl-js)
* "yajl-js":http://bitbucket.org/nikhilm/yajl-js -- SAX-like evented JSON parsing using "yajl":http://lloyd.github.com/yajl


<a name="wiki-parsers-xml"></a>

h4(#parsers-xml). "XML":#parsers-xml
* "node-o3-xml":https://github.com/ajaxorg/node-o3-xml -- W3C Standard based XML DOM with XPath and namespaces. Built on libxml2
* "node-o3-fastxml":https://github.com/ajaxorg/node-o3-fastxml -- W3C Standards based XML DOM based on fastest xml parser in the world pugiXML
* "libxmljs":https://github.com/polotek/libxmljs -- Bindings to libxml2
* "node-xml":https://github.com/robrighter/node-xml -- An xml parser for node.js. (The github page for this module is showing some severe performance issues. Not recommended as an "out of the box" solution.)
* "sax-js":https://github.com/isaacs/sax-js -- SAX-like parser in pure JS
* "dom-js":https://github.com/teknopaul/dom-js -- A pure JS XML DOM based on sax-js
* "node-expat":https://github.com/astro/node-expat -- Fast SAX parser binding to expat
* "node-expat":https://github.com/shimondoodkin/node-expat -- a fork of Fast SAX parser binding to expat, also includes XML to JavaScript object converter
* "node-xml2js":https://github.com/Leonidas-from-XIV/node-xml2js/ -- Simple XML to JavaScript object converter.
* "libxml-to-js":https://github.com/SaltwaterC/libxml-to-js -- XML to JavaScript object converter based on libxmljs.
* "node-plist":https://github.com/TooTallNate/node-plist -- Apple Plist parser for NodeJS. Convert a Plist file or string into a native JS object.
* "node-halfstreamxml":https://github.com/thejh/node-halfstreamxml -- sax-js based, filter out nodes (with attributes and child nodes) from an xml stream by name
* "xml2json":https://github.com/buglabs/node-xml2json -- Simple SAX based XML to JSON parser. It uses node-expat.
* "xml-stream":https://github.com/assistunion/xml-stream -- XML stream parser and editor, based on node-expat.

<a name="wiki-parsers-commandline"></a>

h4(#parsers-commandline). "Command Line Option Parsers":#parsers-commandline
* "cli":https://github.com/chriso/cli -- Rapidly build command line apps. Full featured opts/args parser + plugin support
* "commander.js":https://github.com/visionmedia/commander.js -- The complete solution for nodejs command-line interfaces
* "argsparser":https://github.com/kof/node-argsparser -- A tiny limited arguments parser, returns a hash.
* "optimist":https://github.com/substack/node-optimist -- Light-weight option parsing without optstrings or any of that silliness. It's just a hash!
* "optparse-js":https://github.com/jfd/optparse-js/tree/master -- Option Parser in JS
* "parseopt":http://bitbucket.org/panzi/javascript-utils/src/tip/parseopt/ -- Flexible and extensible option parser in JavaScript.
* "trollopjs":https://github.com/bentomas/trollopjs -- Another option parser
* "js-opts":http://www.bitbucket.org/mazzarelli/js-opts/ -- Another simple command line option parser, easily installed via NPM
* "node-arguments":https://github.com/fczuardi/node-arguments -- Yet another simple command line option parser
* "nomnom":https://github.com/harthur/nomnom -- Option parser with generated usage, support for callbacks and commands.
* "tav":https://github.com/akaspin/tav -- Brain-free command-line options parser for node.js
* "Operetta":https://github.com/tricknik/node-operetta -- A Node Option Parser That Sings!
* "yanop":https://github.com/frodwith/yanop -- Yet Another Node Option Parser
* "options.js":http://valeriu.palos.ro/1026/command-line-option-parser-in-javascript/ -- An inline (non-module!) options parser that is very small and yet quite complete.
* "celeri.js":https://github.com/spiceapps/celeri -- Complete command line interfaces lib for node.js

<a name="wiki-parser-generators"></a>

h4(#parser-generators).  "Parser Generators":#parser-generators
* "bnf":https://github.com/navstev0/nodebnf -- BNF parser, compiler, and interpreter framework.
* "canopy":https://github.com/jcoglan/canopy -- PEG parser compiler for JavaScript
* "jison":https://github.com/zaach/jison -- A parser generator written in JavaScript; similar to Bison for C
* "PEG.js":http://pegjs.majda.cz/ -- Parser Generator for JavaScript
* "language.js":http://languagejs.com/ -- A fast PEG parser generator with first class errors and reasonable sized output
* "PanPG":http://boshi.inimino.org/3box/PanPG/about.html -- A PEG Packrat Parser Generator for JavaScript
* "jparse":https://github.com/doublec/jsparse -- A parser combinator for JavaScript based on Packrat parsers and Parsing expression grammars
* "ReParse":https://github.com/weaver/ReParse -- A parser combinator library for JavaScript like Haskell's Parsec
* "OMeta JavaScript compiler":http://tinlizzie.org/ometa-js/#JavaScript_Compiler
* "tokenizer":http://github.com/floby/node-tokenizer -- A regex-based and streamed tokenizer
* "parser":http://github.com/floby/node-parser -- A general purpose parser that feeds on tokens (see "tokenizer":http://github.com/floby/node-tokenizer)
* "JSCC-NODE":http://github.com/badlee/JSCC-NODE -- The Best and The first parser generator written in JavaScript; Use a regular expression-based lexical analyzer generator and a LALR parser generator for building a stand-alone, working parser.

<a name="wiki-parsers-other"></a>

h4(#parsers-other). "Other Parsers":#parsers-other
* "groan":https://github.com/mscdex/groan -- A PHP session file parser
* "tldextract":https://github.com/masylum/tldextract -- Extract domain, subdomain and tld from a url.
* "mingy":https://github.com/mcantelon/node-mingy -- Command parser for CLI tool and adventure game needs. Works well with the optimist module.
* "node-rdf2json":https://github.com/baxtree/node-rdf2json -- A simple RDF/XML to JSON converter
* "node-brainfuck":https://github.com/masylum/node-brainfuck -- Brainfuck interpreter
* "node-discount":https://github.com/visionmedia/node-discount -- C markdown parser "discount" bindings
* "node-csv":https://github.com/voodootikigod/node-csv -- Efficient Evented CSV Parsing.
* "ya-csv":https://github.com/koles/ya-csv -- Evented CSV parser and writer with configurable separator, escape and quote characters
* "node-csv-parser":https://github.com/wdavidw/node-csv-parser -- Full featured CSV parser with simple api and tested against large datasets.
* "querystring.node.js":https://github.com/jazzychad/querystring.node.js -- Robust query string parsing for node.
* "node-htmlparser":https://github.com/tautologistics/node-htmlparser -- Forgiving HTML Parser in JS for both Node and Browsers
* "node-useragent":https://github.com/3rd-Eden/useragent -- User agent string parser with accurate browser versioning and grouping
* "node-jspack":https://github.com/pgriess/node-jspack -- JavaScript library to pack ints, floats, etc. to octet arrays representing C data structures
* "node-msgpack":https://github.com/pgriess/node-msgpack -- Bindings for MessagePack, space-efficient object serialization library
* "node-rfb":https://github.com/substack/node-rfb -- Parse the RFB protocol used by VNC
* "node-bufferlist":https://github.com/substack/node-bufferlist -- Create linked lists of buffers and asynchronously parse binary data from these lists
* "node-netstring":https://github.com/pgriess/node-netstring -- Read and write "netstrings":http://cr.yp.to/proto/netstrings.txt
* "apricot":https://github.com/silentrob/Apricot -- Hpricot inspired clone, JSDom with Sizzle Selector engine and XUI for HTML augmentation
* "node-crawler":https://github.com/joshfire/node-crawler -- Web crawler/spider with JSDom, jQuery & connection pooling.
* "node-strtok":https://github.com/pgriess/node-strtok -- A streaming tokenizer library for binary data
* "omcc":https://github.com/tristanls/ometa-js-node -- A command line tool for Alessandro Warth's OMetaJS
* "ometa-js":https://github.com/bmavity/ometa-js , "ometajs":https://github.com/veged/ometa-js -- A JavaScript OMeta implementation
* "props":https://github.com/pvorb/node-props -- Parse json or yaml from the beginning of text files.
* "protobuf_for_node":http://code.google.com/p/protobuf-for-node/ -- Protocol buffer parsing and serialization
* "node-markdown":https://github.com/andris9/node-markdown -- Easy to use Markdown parser
* "highlight":https://github.com/andris9/highlight -- Code highlighter for Markdown <code> blocks and for automatic language detection
* "strscan":https://github.com/sstephenson/strscan-js -- Simple string tokenizer for lexical scanning operations
* "iniparser":https://github.com/shockie/node-iniparser -- A Simple .ini parser 
* "mailparser":https://github.com/andris9/mailparser -- Parse mime encoded e-mails into structured objects
* "node-browscap":https://github.com/dangrossman/node-browscap -- browscap.ini parser and port of PHP's get_browser function
* "node_spreadsheet":https://github.com/shimondoodkin/node_spreadsheet -- Read xls,xlsx,ods,csv spreadsheets (php based)
* "carrier":https://github.com/pgte/carrier -- Evented stream line reader for node.js
* "parser_email":https://github.com/jrgns/parser_email - Simple multi type email parser
* "memcache-parser":https://github.com/billywhizz/node-memcache-parser - Memcached binary protocol parser
* "fastcgi-parser":https://github.com/billywhizz/node-fastcgi-parser - FastCGI protocol parser and Writer
* "node-formidable":https://github.com/felixge/node-formidable - A node.js module for parsing form data, especially file uploads.
* "CSSOM":https://github.com/NV/CSSOM - CSS parser and CSS Object Model implementation.
* "glossy":https://github.com/squeeks/glossy - Syslog message parser and producer
* "UglifyJS":https://github.com/mishoo/UglifyJS - JavaScript parser and compressor/beautifier
* "epub":https://github.com/andris9/epub - Parse EPUB electronic book files with Node.JS, load chapters, images etc.
* "marked":https://github.com/chjj/marked - A markdown parser and compiler. Built for speed.
* "feed-tables":https://github.com/tomvit/Feed-Tables - a lightweight parser for Google Spreadsheet tables available as cells or list atom feeds.
* "NodePie":https://github.com/andris9/NodePie - Simple RSS/Atom parser for Node.JS
* "node-musicmetadata":https://github.com/leetreveil/node-musicmetadata - Get music metadata asynchronously from node streams.
* "node-struct":https://github.com/xdenser/node-struct -- Parse/format binary data in buffers.
* "node-feedparser":https://github.com/danmactough/node-feedparser - RSS, Atom, and RDF feed parsing in Node.js
* "VIE":https://github.com/bergie/VIE - RDFa parsing in Node.js
* "butter":https://github.com/rootslab/butter - Butter === nodeJS Buffer + ( some hexadecimals delights )
<a name="wiki-debugging"></a>

h3(#debugging). "Debugging / Console Utilities":#debugging
* "ain":https://github.com/akaspin/ain -- Brain-free syslog logging
* "cfdump.js":https://github.com/figital/cfdump.js -- a more visually inspiring way to dump your objects to a browser
* "cli-color":https://github.com/medikoo/cli-color -- colors and formatting for the console
* "colors.js":https://github.com/Marak/colors.js -- get colors in your node.js console like what
* "colours.js":https://github.com/botanicus/colours.js -- Give your CLI programs some colours!
* "colored.js":https://github.com/chrislloyd/colored.js -- Colorize terminal output.
* "consolelog.js":https://github.com/jazzychad/consolelog.node.js -- stylized console logging for node.js
* "Eclipse debugger plugin":http://code.google.com/p/chromedevtools/ -- [[Using Eclipse as Node Applications Debugger]]
* "eyes.js":https://github.com/cloudhead/eyes.js -- A better, customizable value inspector for node.js
* "Caterpillar":https://github.com/balupton/caterpillar.npm -- Caterpillar is an awesome, simple, intuitive console logger for node.js. It supports grouping of messages, filtering log levels, colors, times, modules, custom formatters and custom transports.
* "irc-colors.js":https://github.com/fent/irc-colors.js --Color and formatting for irc bots made easy
* "hexy.js":https://github.com/a2800276/hexy.js -- hex pretty printing like xxd
* "http-console":https://github.com/cloudhead/http-console -- A simple & intuitive HTTP console for testing APIs.
* "inspect":https://github.com/visionmedia/inspect -- hierarchical object inspection displaying ancestry, properties, methods, and accessors in great detail.
* "log.js":https://github.com/visionmedia/log.js -- light-weight logger that works with any writable stream, also supports a streaming parser for reading the log files generated
* "log4js-node":https://github.com/csausdev/log4js-node -- a port of log4js framework for node.js
* "logging":https://github.com/dylang/logging -- Super sexy color console logging.
* "logly":https://github.com/tristanls/logly -- A minimal logging utility to support verbose and debug modes
* "nlogger":https://github.com/igo/nlogger -- Logging lib that can print also module names and line numbers, optionally in color
* "node-logging":https://github.com/HerdHound/node-logging -- Simple colorized logging for Node.js with request logger Express middleware
* "monitor":https://github.com/lorenwest/node-monitor -- Runtime monitoring for node.js applications - npm install monitor
* "node-logentries":https://github.com/rjrodger/node-logentries -- A winston-compatible wrapper library for the logentries.com service
* "Node-JavaScript-Preprocessor":https://github.com/mcoolin/Node-JavaScript-Preprocessor -- Preprocessor for JavaScript
* "node-prompt":https://github.com/jesusabdullah/node-prompt -- Prompt the user for questions in cli!
* "node-streamlogger":https://github.com/andrewvc/node-streamlogger -- Extensively customizable logging, with support for rotation
* "node_debug":https://github.com/Connorhd/node_debug/tree/master -- HTTP based console and object explorer
* "ndb":https://github.com/smtlaissezfaire/ndb -- traditional command line debugger (like gdb, ruby-debug, etc)
* "node-profiler":https://github.com/bnoordhuis/node-profiler -- access the V8 profiler from node.js
* "node-inspector":https://github.com/dannycoates/node-inspector -- browser based node debugger
* "node-custom-debug":https://github.com/bobrik/node-custom-debug -- debugger on custom port on the fly, good addition for node-inspector to inspect many instances on the one server with ease
* "node-cli":https://github.com/SchizoDuckie/Node-CLI/ -- cli.clear().move(20,20).color('green').write('Node-cli').down(1).back(7).color('yellow').write('Rocks!')
* "profilejs":https://github.com/HerdHound/profilejs -- profiling middleware for use with node-inspector (profiles Express handlers)
* "spine":https://github.com/thrashaholic/spine -- Dynamic runtime monitoring for node.js applications inspired by lorenwest's monitor.
* "spruce":https://github.com/MarkPNeyer/spruce -- configurable node.js logging module
* "strack":https://github.com/selead/strack -- bug tracking/tickets system
* "v8-profiler":https://github.com/dannycoates/v8-profiler -- v8 profiler bindings with node-inspector integration
* "webrepl":https://github.com/mmattozzi/webrepl -- Serve a repl for a node process via a simple web ui
* "Replica":https://github.com/zentooo/Replica -- Repl to exec JavaScript code on browser
* "Shell":https://github.com/wdavidw/node-shell -- Nice looking shell applications with pluggable middlewares
* "Winston":https://github.com/indexzero/winston -- A multi-transport async logging library for node.js
* "flume-rpc":https://github.com/recoset/node-flume-rpc -- A flume-compatible (RPC) logging source and sink

<a name="wiki-compression"></a>

h3(#compression). "Compression":#compression
* "gzippo":https://github.com/tomgallacher/gzippo -- gzip static content files with Connect/Express using node-compress
* "connect-gzip":https://github.com/nateps/connect-gzip -- gzip middleware for Connect. Contains middleware for gzipping and serving static files as well as gzipping responses dynamically 
* "gzip":https://github.com/indutny/node.gzip -- simple compression using default linux "gzip" utility
* "lzma":https://github.com/nmrugg/LZMA-JS/ -- A standalone JavaScript implementation of the Lempel-Ziv-Markov chain (LZMA) compression algorithm
* "node-compress":https://github.com/waveto/node-compress -- streaming compression / gzip library
* "node-compress by egorich239":https://github.com/egorich239/node-compress -- asynchronous streaming (de)compression library with gzip and bzip2 support, originally forked from "waveto's":https://github.com/waveto/node-compress
* "node-gzbz2":https://github.com/Woodya/node-gzbz2 -- streaming compression / gzip / bzip2 library for node.js, originally forked from "waveto's":https://github.com/waveto/node-compress
* "node-compress-buffer":https://github.com/egorfine/node-compress-buffer -- single-step Buffer compression library on top of zlib
* "node-snappy":https://github.com/kesla/node-snappy -- compression using Google's snappy library.
* "node-zipfile":https://github.com/springmeyer/node-zipfile -- inspect and uncompress zipfile archives (C++ around libzip)
* "node-zlibstream":https://github.com/carsonmcdonald/node-zlibstream -- Streaming zlib library using zlib
* "node-zlib-sync":https://github.com/ssuda/node-zlib-sync -- rfc1950/rfc1951/rfc1952 compress/uncompress (C++ around libzlib)
<a name="wiki-graphics"></a>

h3(#graphics). "Graphics":#graphics
* "pdfkit":https://github.com/devongovett/pdfkit -- A powerful PDF generation library for Node
* "node-wkhtml":https://github.com/mhemesath/node-wkhtml -- Convert HTML to PDF or PNG using the Webkit Rendering Engine.
* "drawback":https://github.com/LearnBoost/drawback -- Seamless way to render 2D drawings on the client side using HTML5 technologies with a server-side backend.
* "node-canvas":https://github.com/learnboost/node-canvas -- High performance canvas implementation backed by the phenomenal Cairo graphics library
* "node-o3-canvas":https://github.com/ajaxorg/node-o3-canvas -- Fast HTML5 Canvas and image processing implementation based on AGG
* "node-gd":https://github.com/taggon/node-gd -- GD graphic library bindings
* "magickal-node":https://github.com/quiiver/magickal-node -- GraphicsMagick wrapper for node.js
* "node-magick":https://github.com/mirkok/Node-Magick -- rewrite of GraphicsMagick wrapper magickal-node fixing some issues
* "node-imagemagick":https://github.com/rsms/node-imagemagick -- ImageMagick module
* "node-png":https://github.com/pkrumins/node-png -- Convert an RGB or RGBA buffer to PNG fast
* "node-gif":https://github.com/pkrumins/node-gif -- Convert an RGB or RGBA buffer to GIF fast
* "node-jpeg":https://github.com/pkrumins/node-jpeg -- Convert an RGBA or RGB buffer to JPEG fast
* "node-ogl":https://github.com/tmpvar/node-ogl -- OpenGL bindings
* "node-webgl":https://github.com/pufuwozu/node-webgl -- WebGL emulation
* "gm":https://github.com/aheckmann/gm -- GraphicsMagick for node
* "node-video":https://github.com/pkrumins/node-video -- Create Theora/OGG videos from RGB(A) buffers (and stream them via <video> tag)
* "node-image":https://github.com/pkrumins/node-image -- Unifies node-png, node-gif, node-jpeg
* "node-pango-view":https://github.com/shimondoodkin/node-pango-view -- print text with pango to temporary png image, then merge it with ImageMagick. 
* "squeeze":https://github.com/nikhilm/squeeze -- Mince and convert images on the cloud using "UploadJuicer":http://www.uploadjuicer.com .
* "node-graphviz":https://github.com/glejeune/node-graphviz -- GraphViz for node
* "node-mapnik":https://github.com/mapnik/node-mapnik -- Mapnik bindings for high performance rendering of map tiles.
* "node-mapserver":https://github.com/pagameba/node-mapserver -- mapserver bindings for rendering mapserver MAP files via node
* "node-exif":https://github.com/gomfunkel/node-exif -- Library to extract Exif metadata from images
* "node-fluent-ffmpeg":https://github.com/schaermu/node-fluent-ffmpeg -- Fluent API for ffmpeg (including streaming, thumbnail-generation and custom presets)
* "ffmpeg2theora":https://github.com/FLYBYME/node-ffmpeg2theora -- Batch encoding with ffmpeg2theora
* "ffmpeg-node":https://github.com/xonecas/ffmpeg-node -- Node.js driver for ffmpeg library
* "Face.js":https://github.com/talvarez/Face.js -- Node.js module for detecting faces in images
* "youtube-dl":https://github.com/fent/node-youtube-dl -- youtube-dl driver for node
* "node-handbrake":https://github.com/cwolves/node-handebrake -- HandBrakeCLI wrapper to encode an entire folder of videos

<a name="wiki-payment-gateways"></a>

h3(#payment-gateways). "Payment Gateways":#payment-gateways
* "paynode":https://github.com/jamescarr/paynode - library for integrating with various payment gateways
* "braintree":https://github.com/braintree/braintree_node -- library for integrating with Braintree
* "node-fortumo":https://github.com/andris9/node-fortumo -- bindings for Fortumo SMS payment API
* "paypal-ipn":https://github.com/andzdroid/paypal-ipn -- library for verifying paypal IPN messages

<a name="wiki-api-clients"></a>

h3(#api-clients). "API clients":#api-clients
* "supervisord":https://github.com/spiceapps/supervisord - Library for supervisord 
* "aws-lib":https://github.com/mirkok/aws-lib -- An extensible library for Amazon Web Services including EC2, SimpleDB and the Product Advertising API
* "aws2js":https://github.com/SaltwaterC/aws2js -- Amazon Web Services APIs client implementation for node.js. Simple to use and extend.
* "calais":https://github.com/mcantelon/node-calais -- Semantically analyze text using the Calais web service
* "discogs":https://github.com/linus/discogs -- Discogs API client
* "dropbox-node":https://github.com/evnm/dropbox-node -- A wrapper for the Dropbox API 
* "dribbble-node":https://github.com/carlosvillu/Dribbble-node -- A wrapper for the Dribbble API
* "evented-twitter":https://github.com/polotek/evented-twitter -- asynchronous twitter client, supports streaming api
* "facebook-js":https://github.com/masylum/facebook-js -- Easy peasy facebook client for connect.
* "facebook-api":https://github.com/mren/facebook-api -- offers high level and low level calls against the facebook graph API
* "fbgraph":https://github.com/criso/fbgraph -- Sexay Facebook graph api
* "fitbit-js":https://github.com/smurthas/fitbit-js -- Simple FitBit API wrapper
* "flickr-reflection":https://github.com/teemow/node-flickr-reflection -- A flickr client that uses their reflection API (supports auth)
* "flickrnode":https://github.com/ciaranj/flickrnode -- A library to enable use of the flickr api (not as complete as node-flickr, but supports auth) 
* "forrst":https://github.com/fczuardi/node-forrst -- Simple wrapper for the Forrst.com API.
* "gdata-js":https://github.com/smurthas/gdata-js -- Simple Google Data API OAuth 2.0 wrapper
* "geo":http://github.com/feliperazeek/geonode -- A very basic, but simple, geocode library, currently using Google Geocode API (v3)
* "gist":https://github.com/emerleite/node-gist -- A gist creator. Create GISTs and use the generated URI.
* "gravatar":https://github.com/emerleite/node-gravatar -- Well tested Node.JS Gravatar URL generator
* "hipchat-js":https://github.com/smurthas/hipchat-js -- Simple HipChat API wrapper
* "instagram-node-lib":https://github.com/mckelvey/instagram-node-lib -- Library for easy interaction with the Instagram API
* "janrain-api":https://github.com/demetriusj/janrain -- Module for interfacing with Janrain Engage API
* "klout-js":https://github.com/smurthas/klout-js -- Simple Klout API wrapper
* "lastfm-node":https://github.com/jammus/lastfm-node -- Read and write to users' recent plays on Last.fm
* "linkedin-js":https://github.com/masylum/linkedin-js -- Easy peasy linkedin client for connect.
* "mixpanel-node":https://github.com/carlsverre/mixpanel-node -- A simple Mixpanel API library for server-side analytics.
* "madmimi-node":https://github.com/garrensmith/Madmimi-node -- Client library for the MadMimi email api [[http://www.madmimi.com]].
* "node-mixpanel-api":https://github.com/campfirelabs/node-mixpanel-api -- A simple client for the Mixpanel Data API (not event tracking! see above)
* "node-apn":https://github.com/argon/node-apn -- A library to send messages using the Apple Push Notification Service.
* "node-armory":https://github.com/xtian/node-armory -- A simple wrapper around Blizzard's REST API for World of Warcraft.
* "node-c2dm":https://github.com/SpeCT/node-c2dm -- A library to send messages using the Android Cloud to Device Messaging (C2DM) service.
* "node-bitly":https://github.com/tanepiper/node-bitly -- A bit.ly API library for node.js - provides URL shortening/expanding.  Features full API.
* "node-cloudfiles":https://github.com/nodejitsu/node-cloudfiles -- A client implementation for Rackspace CloudFiles in node.js
* "node-cloudservers":https://github.com/nodejitsu/node-cloudservers -- A client implementation for Rackspace CloudServers in node.js
* "node-foursquare":https://github.com/clintandrewhall/node-foursquare -- A wrapper for the Foursquare v2 API.
* "node-klout":https://github.com/edwardhotchkiss/node-klout -- Extremely reliable Node.js Klout API Wrapper
* "node-github":https://github.com/ajaxorg/node-github -- A wrapper for the "GitHub API":http://develop.github.com/
* "node-gitteh":https://github.com/libgit2/node-gitteh -- Async, stable, feature-complete bindings for the "libgit2":http://libgit2.github.com/ library.
* "nodegit":https://github.com/tbranyen/nodegit -- Asynchronous native Node.js "libgit2":http://libgit2.github.com/ bindings with a convenient api
* "node-gdata":https://github.com/ammmir/node-gdata -- A generic Google Data API client library
* "node-googleanalytics":https://github.com/ncb000gt/node-googleanalytics -- Google Analytics GData export library
* "node-googlemaps":https://github.com/moshen/node-googlemaps -- A wrapper for the Google Maps API
* "node-loggly":https://github.com/nodejitsu/node-loggly --A client implementation for Loggly in node.js
* "node-mailgun":https://github.com/shz/node-mailgun -- Client library for MailGun
* "node-ostatus":https://github.com/eschnou/node-ostatus -- An implementation of the OStatus protocol (Webfinger, Push, Hcard, Salmon, etc.)
* "node-posterous":https://github.com/andzdroid/node-posterous -- Library for the Posterous API
* "node-prowl":https://github.com/mape/node-prowl -- A module that allows you to send push notifications to your iPhone through the Prowl API
* "node-rapleaf":https://github.com/tralamazza/node-rapleaf -- RapLeaf API client
* "node-sendgrid":https://github.com/HerdHound/node-sendgrid -- Sendgrid SMTP API headers library
* "nodefm":https://github.com/mikebannister/nodefm -- So far just a util for consuming last.fm recent tracks history for a user
* "nodestalker":https://github.com/pascalopitz/nodestalker -- A beanstalkd client for node
* "nodestagram":https://github.com/Swizec/nodestagram -- Instagram client for node
* "nodevore":https://github.com/troufster/nodevore -- Convore API wrapper
* "node-taobao":https://github.com/e6nian/node-taobao/ -- A client library for taobao.com api
* "node-twilio":https://github.com/sjwalter/node-twilio/ -- A helper library for the Twilio API
* "node-twitter":https://github.com/jdub/node-twitter -- Asynchronous Twitter REST/stream/search client for node.js
* "node-vk":https://github.com/Sonetica/node-vk -- vkontakte.ru and vk.com social network api wrapper for mobile and desktop applications.
* "pingdom":https://github.com/ryanbreen/node-pingdom -- A module for accessing the Pingdom JSON API
* "webmetrics":https://github.com/ryanbreen/node-webmetrics -- A module for accessing the Webmetrics JSON API
* "postageapp":https://github.com/postageapp/postageapp-nodejs -- A module for sending emails through the PostageApp JSON API
* "tropo-webapi-node":https://github.com/tropo/tropo-webapi-node -- A library for building multi-channel communication apps with the Tropo WebAPI.
* "SMSified-node":https://github.com/smsified/smsified-node -- A module for sending and receiving SMS messages (text messages) with the SMSified API.
* "tumblrrr":https://github.com/mvrilo/tumblrrr -- A wrapper for Tumblr's API
* "tumblr":https://github.com/meritt/node-tumblr -- A wrapper for Tumblr's API v2
* "tweetstream":https://github.com/mikeal/tweetstream -- Stream like API for twitter's HTTP streaming interface.
* "twitter-search":https://github.com/edwardhotchkiss/twitter-search -- Twitter API Search w/ search result pagination, returning up to 1500 queried tweets with RegEx search, kSorts, Klout scoring and filters
* "TwitScript":https://github.com/ryanmcgrath/twitscript -- A port of Twython to Node.js (Twitter API Library)
* "twitter-js":https://github.com/masylum/twitter-js -- Easy peasy twitter client for connect.
* "node-gravatar":https://github.com/arnabc/node-gravatar -- Node.js Gravatar URL generator, can be used with Node.js blogging frameworks 
* "node-spore":https://github.com/francois2metz/node-spore -- Node.js implementation of "spore":https://github.com/SPORE/ Generate api client with a json file.
* "akismet-js":https://github.com/oozcitak/akismet-js -- A client for the "Akismet spam detection API":http://akismet.com/development/api/
* "spotify":https://github.com/roncioso/node-spotify-metadata -- Spotify api wrapper. Metadata lookup and search. Works with Spotify and http uris
* "node-mailchimp":https://github.com/gomfunkel/node-mailchimp -- A wrapper for the MailChimp API, MailChimp Export API and MailChimp Webhooks
* "ranger":https://github.com/mrduncan/ranger/ -- A simple library which wraps Campfire's API
* "node-notifo":https://github.com/nerocreativo/node-notifo -- Real-time notifications pushed to your mobile phone (and more).
* "node-beaconpush":https://github.com/cgbystrom/node-beaconpush -- Client for the Beaconpush REST API. A real-time push service for browsers supporting WebSockets and Comet.
* "node-neoip":https://github.com/jeromeetienne/node-neoip -- binding for neoip
* "node-pdfcrowd":https://github.com/pdfcrowd/node-pdfcrowd -- A wrapper for the Pdfcrowd API. It lets you convert web pages and raw HTML code to PDF.
* "node-yelp":https://github.com/olalonde/node-yelp -- A wrapper for the Yelp's APIv2. Let's you search for businesses and get specific business information.
* "sailthru-client":https://github.com/sailthru/sailthru-node-client -- A wrapper for Sailthru API
* "yammer-js":https://github.com/smurthas/yammer-js -- Simple Yammer API wrapper
* "node-wikimapia":https://github.com/Sannis/node-wikimapia -- Node.js wrapper for the Wikimapia API
* "waz-storage-js":https://github.com/jpgarcia/waz-storage-js -- A simple implementation of Windows Azure Storage API for Node.js
* "virustotal.js":https://github.com/SaltwaterC/virustotal.js -- VirusTotal API client for node.js
* "VIE":https://github.com/bergie/VIE -- Apache Stanbol and DBpedia API client for Node.js

<a name="wiki-async-flow"></a>

h3(#async-flow). "Control flow / Async goodies":#async-flow
* "async.js":https://github.com/fjakobs/async.js -- Async chaining and file system utilities. Async.js is to node's fs module, what jQuery is to the DOM.
* "async":https://github.com/caolan/async -- Comprehensive async map/reduce and control flow (parallel, series, waterfall, auto...) module that works in node and the browser
* "atbar":https://github.com/mark-hahn/atbar -- Async callback manager for javascript in nodejs and browser
* "begin":https://github.com/arumons/begin -- Control flow library for node.js and CoffeeScript
* "chainsaw":https://github.com/substack/node-chainsaw -- Build chainable fluent interfaces the easy way in node.js
* "channels":https://github.com/Pita/channels -- Event channels for node.js
* "Cinch":https://github.com/pguillory/cinch -- Write async code in sync form.
* "deferred":https://github.com/medikoo/deferred -- Asynchronous control-flow with deferred and promises
* "each":https://github.com/wdavidw/node-each -- Chained and parallel async iterator in one elegant function
* "fiberize":https://github.com/lm1/node-fiberize -- Node API wrapper for use with fibers.
* "fibers":https://github.com/laverdet/node-fibers -- The closest thing to a thread you'll find in JavaScript
* "fibers-promise":https://github.com/lm1/node-fibers-promise -- Small yet powerful promises based on fibers.
* "first":https://github.com/DanielBaulig/first -- A tiny control-flow library.
* "flow-js":https://github.com/willconant/flow-js -- Continuation-esque contruct for expressing multi-step asynchronous logic
* "funk":https://github.com/masylum/funk -- Asynchronous parallel functions made funky!
* "futures":https://github.com/coolaj86/futures - Asynchronous Method Queueing, Futures, Promises, Subscriptions, and other async goodies
* "promise":https://github.com/megakorre/promise -- A Continuation handler (monad) with a condition system for errors
* "groupie":https://github.com/alexkwolfe/groupie -- A simple control flow library for executing multiple functions as a group or in a chain, calling back when complete.
* "Ignite":http://www.ignitejs.com/ -- An easy-to-use async programming framework inspired by UML2 state machines.
* "Jscex":http://github.com/JeffreyZhao/jscex -- Transforms sync code into monadic, async code as the async support in F# and Scala.
* "JobManager":https://github.com/demian85/node-jobmanager -- A really simple tool that helps you manage multiple asynchronous tasks.
* "$N":https://github.com/chjj/-N -- Simple control flow with pretty syntax.
* "nestableflow":https://github.com/minodisk/flow-js -- Asynchronous nestable flow-control (serial, parallel, repeat, wait, function) module for Node.js, RequireJS, and browser.
* "node-chain":https://github.com/ArtS/node-chain -- Simple call chaining library for node.js
* "node-continuables":https://github.com/bentomas/node-continuables -- A library making dealing with asynchronous code easier
* "node-cron":https://github.com/ncb000gt/node-cron -- Schedule callbacks with cron syntax
* "node-crontab":https://github.com/dachev/node-crontab -- Allows reading, manipulating, and writing user crontabs from node.js
* "node-inflow":https://github.com/shimondoodkin/node-inflow -- A next generation async control-flow library, with a shared object for called functions and debugging made easy.
* "node_memo":https://github.com/akidee/node_memo -- Sophisticated function memoization
* "node-parallel":https://github.com/Tim-Smart/node-parallel -- Create tasks in node.js that run in parallel, or sequences that run tasks one after another.
* "node-promise":https://github.com/kriszyp/node-promise -- Robust promises for node.js, includes promise utilities and promise-based I/O library
* "narrow":https://github.com/0ctave/node-narrow -- Shrinks a given callback parallel execution concurrency in a limited number of threads, receiving a big bunch of data (array of tasks)
* "neuron":https://github.com/indexzero/neuron -- The simplest possible event driven job manager, FIFO queue, and "task based cache" in node.js
* "noflo":https://github.com/bergie/noflo -- "Flow-Based Programming":http://en.wikipedia.org/wiki/Flow-based_programming system for Node.js
* "observer":https://github.com/azer/observer -- An alternative observer implementation, for both ss&cs.
* "poolr":https://github.com/codingforce/poolr -- A lightweight resource pooling/serialization library 
* "q":https://github.com/kriskowal/q -- Q is a tool for making and composing asynchronous promises in JavaScript.
* "read-files":https://github.com/pvorb/node-read-files -- Asynchronously read a bunch of files and give a callback when reading is complete.
* "seq":https://github.com/substack/node-seq -- Chainable asynchronous control flow for node.js with sequential and parallel primitives and pipeline-style error handling
* "sexy":https://github.com/crabdude/sexy -- Proxy (ES5) for writing sequential asynchronous code in a synchronous style
* "Signals":http://millermedeiros.github.com/js-signals/ -- Custom Event/Messaging system which supports advanced features, doesn't rely on strings for the event publishing/subscribing and favor composition over inheritance.
* "simple-schedule":https://github.com/SaltwaterC/simple-schedule -- Simple scheduler for dispatching a number of batch tasks at defined intervals
* "Slide":https://github.com/isaacs/slide-flow-control  -- A control flow library that fits in a slide presentation
* "soda.js":https://github.com/tomyan/soda -- Asynchonous JavaScript module loader for client-side and Node.js
* "Step":https://github.com/creationix/step -- Tool for grouping and chaining asynchronous callbacks, based on "flow-js":https://github.com/willconant/flow-js
* "stepc":https://github.com/akidee/stepc -- A CoffeeScript-safe version of creationix' step
* "streamline.js":https://github.com/Sage/streamlinejs -- Tool that transforms synchronous code into asynchronous code with callbacks. 
* "sync":https://github.com/0ctave/node-sync -- Write simple and readable synchronous code in nodejs using fibers (based on "node-fibers":https://github.com/laverdet/node-fibers)
* "QBox":https://github.com/arunoda/qbox -- Quick Controller flow for NodeJS
* "zo.js":https://github.com/refractalize/zo -- Async-friendly versions of the usual list processing functions: `map`, `select`, `reduce` and friends.
* "EventProxy.js":https://github.com/JacksonTian/eventproxy -- Use events to avoid dirty callbacks.

<a name="wiki-i18n"></a>

h3(#i18n). "I18n and L10n modules":#i18n
* "Lingo":http://bit.ly/cuaHAh -- Inflection, transformation and more
* "dialect":https://github.com/masylum/dialect -- Translations for nodejs.
* "dialect-http":https://github.com/masylum/dialect-http -- http client to manage your dialect translations.
* "node-i18n":https://github.com/ohaibbq/node-i18n -- node-i18n is a minimalistic internationalization module with templating 
* "i18n-node":https://github.com/mashpie/i18n-node -- Exports common __(), __n() syntax. Stores JSON objects dynamically on code-change.
* "connect-i18n":https://github.com/masylum/connect-i18n -- Middleware for connect to handle i18n.
* "translate.js":https://github.com/Marak/translate.js -- translate text from one language to another on node.js and the browser. 30+ languages supported, simple as cake.
* "inflect":https://github.com/MSNexploder/inflect -- A port of the Rails / ActiveSupport inflector to JavaScript.
* "node-gettext":https://github.com/andris9/node-gettext -- Use Gettext .MO files with Node.js.
* "lingua":https://github.com/akoenig/express-lingua -- A i18n middleware for the Express.js framework.

<a name="wiki-boilerplates"></a>

h3(#boilerplates). "Boilerplates":#boilerplates
* "npm-boilerplate":https://github.com/wearefractal/npm-boilerplate -- Boilerplate for creating NPM packages
* "node-boilerplate":https://github.com/robrighter/node-boilerplate -- Everything you need to get started on a Node.js website with express and socket.IO
* "transsiberian":https://github.com/masylum/transsiberian -- [outdated] nodejs boilerplate built upon Express and Mongolia
* "NodeBase":https://github.com/dotmaster/NodeBase -- A node base class for JavaScript and CoffeeScript (logging, options, defaults and EventEmitter)
* "infigo-node-boilerplate":https://github.com/jerryjj/infigo-node-boilerplate -- nodejs boilerplate built upon Express, db-mysql/db-drizzle/Mongoose and includes user authentication and group+role authorization system.
* "Skeleton":https://github.com/edwardhotchkiss/skeleton -- Skeleton is a CLI module to bootstrap a Node/Express project with a skeleton template via any git repository, with an included default repo.

<a name="wiki-continuous-integration"></a>

h3(#continuous-integration). "Continuous Integration Tools":#continuous-integration
* "nestor":https://github.com/cliffano/nestor -- Jenkins Node.js CLI

<a name="wiki-other"></a>

h3(#other). "Other":#other
* "append":https://github.com/pvorb/node-append -- Append properties from one object to another.
* "audience-meter":https://github.com/rs/audience-meter -- A simple audience meter based on Socket.IO, perfect for live events tracking
* "node-browserify":https://github.com/substack/node-browserify -- Browser-side require() for your node modules and npm packages
* "nova":https://github.com/wearefractal/nova -- Node.js libraries ported to the browser. Write once, run everywhere.
* "behaviors":https://github.com/caolan/behaviors -- A simple way to check a module's exports, useful for 3rd party plugins and extensions
* "box2dnode":https://github.com/jadell/box2dnode -- Port of the box2d physics simulation library
* "node-bullet":https://github.com/feisty/bullet -- "Bullet Physics":http://bulletphysics.org/ for node.js
* "node-stem":https://github.com/chriso/node-stem -- Bindings to the libstemmer library
* "chess":https://github.com/wsdookadr/Q-Chess/blob/rewrite/server/chess.js -- library for checking legal chess moves
* "chess.js":https://github.com/jhlywa/chess.js -- library for chess move generation, validation, and mate/draw detection
* "clone":https://github.com/pvorb/node-clone -- deep cloning of javascript variables
* "closure":https://github.com/lm1/node-closure -- Google closure library wrapper for node.js
* "cookies":https://github.com/jed/cookies/ -- Signed and unsigned cookies based on Keygrip
* "node-cuda":https://github.com/kashif/node-cuda -- NVIDIA CUDA bindings for node.js
* "Curator.js":https://github.com/clvv/Curator.js -- A flexible process monitoring and management framework
* "node-cookiejar":https://github.com/bmeck/node-cookiejar -- repetitive use cookie jar construction / cookie functionality
* "daemon.node":https://github.com/Slashed/daemon.node/ -- Unix/Linux Daemons with node.js
* "underscore.date":https://github.com/timrwood/underscore.date -- Javascript date library for parsing, manipulating, and formatting dates, all without modifying the Date.prototype. Supports timeago and i18n. Works in Node and the browser.
* "node-date":https://github.com/tarunc/node-date -- Utilities adding extra functionality to the Date object (Works in Node + Browser)
* "datejs":https://github.com/chrisdew/datejs -- DateJS wrapped up as an NPM package for node.js
* "dateformat":https://github.com/felixge/node-dateformat -- A node.js package for Steven Levithan's excellent dateFormat() function
* "dateformatjs":https://github.com/minodisk/dateformat-js -- Formatting Date to String and parsing String to Date module for Node.js, RequireJS, and browser.
* "isodate":https://github.com/pvorb/node-isodate -- ISO 8061 date/time parser
* "relative-date":https://github.com/azer/relative-date/ -- JavaScript module for outputting relative dates. 
* "deja":https://github.com/mcantelon/node-deja -- CLI utility for managing git versioning of dotfiles and such
* "daemonchk.js":https://github.com/dulac/daemonchk.js/ -- Daemon Monitor (with HTTP interface)
* "dir2html":https://github.com/mcantelon/node-dir2html -- Render a directory as HTML
* "dive":https://github.com/pvorb/node-dive -- Walking through directory trees and apply an action to every file.
* "dust":https://github.com/pasviegas/dust -- OO way to fill your database with not totally random content
* "docco":https://github.com/jashkenas/docco -- Docco is a quick-and-dirty, hundred-line-long, literate-programming-style
documentation generator
* "dox":https://github.com/visionmedia/dox -- Documentation generator using JSdoc and markdown comments
* "es5-ext":https://github.com/medikoo/es5-ext -- Low-level JavaScript extensions
* "express-chat":https://github.com/Tug/express-chat -- A chat application demo for testing node.js + MongoDB scalability
* "express-resource":https://github.com/visionmedia/express-resource -- Resourceful routing for express
* "express-configure":https://github.com/visionmedia/express-configuration -- Async configuration for express
* "express-namespace":https://github.com/visionmedia/express-namespace -- Namespaced routing for express
* "express-expose":https://github.com/visionmedia/express-expose -- Expose server-side modules, methods, and values to the client-side
* "express-helpers":https://github.com/masahiroh/express-helpers -- Express view helpers
* "ext":https://github.com/visionmedia/ext.js -- High quality / performance JavaScript extensions specifically for node.js
* "Faker.js":https://github.com/marak/Faker.js/ -- generate massive amounts of fake data in Node.js and the browser
* "GeoIP":https://github.com/kuno/GeoIP -- Get geolocation information based on domain or IP address
* "gex":https://github.com/rjrodger/gex -- Glob expressions for JavaScript
* "gitwiki":https://github.com/milani/node-gitwiki -- Build a wiki for your site using this module
* "Grillode":https://github.com/stephenmcd/grillode -- Chat server with various modes such as customer support queues, fixed rooms or Chatroulette random matchups. Written in CoffeeScript and uses express, socket.io and Coffeekup.
* "goog":https://github.com/hsch/node-goog -- Server-side Google Closure with Node.js
* "gss":https://github.com/DTrejo/gss -- Golden Section Search for JavaScript. A line search technique used to *minimize* or *maximize* the output of a function.
* "hub.js":https://github.com/greut/hubbub.js -- in-memory and in progress PubSubHubBub server
* "imdb":https://github.com/mendelbenjamin/node-imdb -- Loops a dir and returns the IMDB ranking + genre of each movie
* "IRC-js":https://github.com/gf3/IRC-js -- An IRC library for node.js 
* "ip2cc":https://github.com/eagereyes/node-ip2cc -- Efficiently convert IP addresses to two-letter country codes
* "ipv6":https://github.com/beaugunderson/javascript-ipv6 -- Parse, validate, and manipulate IPv6 (and v4) addresses
* "ircbot":https://github.com/draggor/node-ircbot -- An IRC bot with plugin support
* "Jefe":https://github.com/fictorial/jefe -- Jefe is a safe sandbox for running user scripts in Node.js
* "Jerk":https://github.com/gf3/Jerk -- A fun little IRC bot library for node.js.
* "JSONPath":https://github.com/joyent/node/wiki/modules -- An XPath-like expression evaluator for JSON.
* "json-streamify":https://github.com/DTrejo/json-streamify -- Streaming version of <code>JSON.stringify</code> for node.js
* "koala":https://github.com/visionmedia/koala.js -- Code syntax highlighting library
* "kohai":https://github.com/nodejitsu/kohai -- I am kohai. I am a pluggable irc bot for managing real-time data events.
* "konphyg":https://github.com/pgte/konphyg -- Cascading configuration files made easy in Node.js.
* "knox":https://github.com/LearnBoost/knox -- Amazon S3 client from the team at LearnBoost
* "LDAP":https://github.com/jeremycx/node-LDAP -- LDAP search/authenticate binding
* "lepote":https://github.com/tdebarochez/lepote -- XMPP bot
* "Lingo":http://bit.ly/cuaHAh -- Inflection, transformation and more
* "limestone":https://github.com/kurokikaze/limestone -- Sphinx search server connector
* "mimelib":https://github.com/andris9/mimelib -- MIME encoded text encoder/decoder etc.
* "nDistro":https://github.com/visionmedia/ndistro -- Node distribution toolkit. Create and install distributions in seconds without GIT or npm
* "Nodaphone":https://github.com/DTrejo/nodaphone -- Use a **phone** to talk to your webapp or any other internet-enabled device. "See the example":http://dtrejo.no.de.
* "Node.io":http://node.io/ -- A distributed data scraping and processing framework.
* "NodeQ":https://github.com/shripadk/nodeq -- A module for Background Processing using Node.js (still Alpha).
* "node-applescript":https://github.com/TooTallNate/node-applescript -- A module to easily execute arbitrary AppleScript code on OS X through NodeJS.
* "node-date-utils":https://github.com/JerrySievert/node-date-utils -- Date extensions for NodeJS and client side.
* "node-discount":https://github.com/visionmedia/node-discount -- C markdown parser "discount" bindings
* "node-downloader":https://github.com/rabc/node-downloader -- Downloader module for node.js
* "node-http-proxy":https://github.com/nodejitsu/node-http-proxy -- A full-featured http proxy for node.j
* "node-radclient":http://sourceforge.net/projects/node-radclient/ -- RADIUS client wrapper
* "node-amf":https://github.com/timwhitlock/node-amf -- AMF library and web service gateway for Flash remoting
* "node-amqp":https://github.com/ry/node-amqp -- AMQP client
* "node-amqp":https://github.com/xaviershay/node-amqp -- Basic AMQP client
* "node-asterisk":https://github.com/mscdex/node-asterisk -- Listen to events in realtime and issue commands on Asterisk servers
* "node-bittorrent":https://github.com/WizKid/node-bittorrent -- A library for handling the bittorrent protocol
* "node-chat":https://github.com/scottgonzalez/node-chat -- A simple web-based chat server
* "node-control":https://github.com/tsmith/node-control -- System admin and code deployment via ssh (similar to Capistrano/Vlad)
* "node-email":https://github.com/aheckmann/node-email -- A simple wrapper around sendmail
* "node-init":https://github.com/frodwith/node-init -- Turn your node daemon into an LSB-compatible init script with customizable shutdown functions
* "nodejs-phpmailer":https://github.com/shimondoodkin/nodejs-phpmailer -- enables to send  emails with inline images with phpmailer from nodejs.
* "node-validator":https://github.com/chriso/node-validator -- String validation, sanitization and filtering - support for user input validation with your chosen web framework
* "node-Daemon":https://github.com/Eyjafjallajokull/node-Daemon -- Restart node script after each change in main script or its dependencies
* "node-daemon":https://github.com/theteam/node-daemon -- Node daemon is a simple way to start, stop and restart your node based application without having to manage external scripts.
* "node-iconv":https://github.com/bnoordhuis/node-iconv -- iconv bindings, character encoding conversion made easy.
* "node-fork":https://github.com/ryantenney/node-fork -- C bindings to fork or daemonize the process.
* "node-genx":https://github.com/wezm/node-genx -- XML generation via the Genx C libary
* "node-geoip":https://github.com/strange/node-geoip -- geoip city lookup module (uses libgeoip)
* "node-gnomenotify":https://github.com/bodil/node-gnomenotify -- C++ bindings for GNOME libnotify on-screen notifications
* "node-growl":https://github.com/visionmedia/node-growl -- unobtrusive notification system (growlnotify "bindings")
* "node-libnotify":https://github.com/mitkok/node-libnotify -- unobtrusive notification system (libnotify "bindings")
* "node-logger":https://github.com/quirkey/node-logger -- Simple logging like Ruby's logger.rb and console.log
* "node-hammer":https://github.com/grippy/node-hammer -- Simple load testing tool similar to AB but with less features.
* "node-hash-ring":https://github.com/bnoguchi/node-hash-ring -- A consistent hashing module
* "node-irc-server":https://github.com/niklasf/node-irc-server -- An extensible IRC server implementation (only supports one server in a network, still in development)
* "node-maxmind":https://github.com/gyordanov/node-maxmind — maxmind/geoip module (using libgeoip)
* "node-maxmind-native":https://github.com/roymap/node-maxmind-native — maxmind/geoip module written in native node.js
* "node-memstream":https://github.com/jfd/node-memstream — MemStream is a memory-based Stream implementation
* "node-multivariate":https://github.com/grippy/node-multivariate — Application and framework for conducting A/B or Multivariate webpage testing (similar to mixpanel but with less features).
* "node-oscar":https://github.com/mscdex/node-oscar - An OSCAR (AIM/ICQ) protocol implementation for node.js
* "node_pcap":https://github.com/mranney/node_pcap -- Network packet capture and analysis using libpcap
* "node-pool":https://github.com/coopernurse/node-pool -- Generic resource pool.  Useful for pooling database connections or other precious things.
* "node-resque":https://github.com/jbr/node-resque -- Resque redis-backed job queue workers in node.js (no longer under active development)
* "node-queue":https://github.com/pagameba/node-queue -- simple queueing service for node, similar model to SQS but much higher performance
* "node-s3":https://github.com/grippy/node-s3 -- App for basic Amazon Web Services S3 administration (upload files, bucket admin, etc.)
* "node.Amazon-S3":https://github.com/nuxusr/Node.js---Amazon-S3 -- S3 implementation with Md5 signing, upload/download progress% events, streaming, large file support. 
* "node-simple-cdn":https://github.com/semu/node-simple-cdn -- Simple Content Delivery Network host balancing for node
* "node-sissy:":https://github.com/tricknik/node-sissy -- S3 Upload & Download, Supports 100 continue, Range header, and using Streams or Files.
* "node-solr":https://github.com/gsf/node-solr -- Solr module for Node
* "node-sosumi":https://github.com/drudge/node-sosumi -- Use Find My Phone services from your node apps
* "node-stomp":https://github.com/kates/node-stomp -- A basic STOMP client.
* "node-stomp-server":https://github.com/jbalonso/node-stomp-server -- A modular STOMP server framework and server
* "RADIUS":https://github.com/jeremycx/node-radius -- RADIUS Auth and Accounting binding
* "stats":https://github.com/visionmedia/stats -- javascript source statistics API & CLI
* "stomp-js":https://github.com/benjaminws/stomp-js -- Full featured STOMP client.
* "node-sunny":https://github.com/ryan-roemer/node-sunny -- Multi-cloud datastore client (AWS S3, Google Storage, etc.).
* "node-syslog":https://github.com/schamane/node-syslog/ -- Allows sending messages to syslog.
* "node-taglib":https://github.com/nikhilm/node-taglib -- Beginnings of bindings to "taglib":http://developer.kde.org/~wheeler/taglib
* "node-twiml":https://github.com/derferman/node-twiml -- Easy TwiML creation in node.js
* "node-ugly":https://github.com/felixge/node-ugly -- Allows to run PHP code from within node.js
* "node-uneval":https://github.com/chakrit/node-uneval -- Adds uneval() support to node.js
* "node-unshortener":https://github.com/swizec/node-unshortener -- A simple url unshortener/expander.
* "node-url-expander":https://github.com/cakebaker/node-url-expander -- An url expander.
* "node-worker":https://github.com/cramforce/node-worker -- An implementation of the WebWorker API for node.js
* "node-webworker":https://github.com/pgriess/node-webworker -- An implementation of the HTML5 Web Worker API.
* "node-yui3":https://github.com/davglass/nodejs-yui3 -- Use the "YUI 3":http://developer.yahoo.com/yui/3 JS library from node.js
* "node-yql":https://github.com/drgath/node-yql -- A YQL (Yahoo Query Language) module for Node.js
* "node-dep":https://github.com/wearefractal/node-dep -- A Node.js module to analyze package dependencies
* "node-zoneinfo":https://github.com/gsmcwhirter/node-zoneinfo -- A wrapper around Date to be able to use zoneinfo file timezone information
* "node-zookeeper":https://github.com/yfinkelstein/node-zookeeper - Apache Zookeeper client API for node.js
* "NormAndVal":https://github.com/roberthahn/NormAndVal -- Data normalization and validation for Node.js and the browser
* "nshtools":https://github.com/rsdoiel/nshtools -- a high level shell scripting library for file and operating system chores
* "odot":https://github.com/tsmith/odot - persistent, code reloading, interactive object space
* "pad":https://github.com/wdavidw/node-pad - Left and right string padding
* "readabilitySAX":https://github.com/fb55/readabilitySAX - the readability algorithm ported to a SAX parser, high performant. Scrapes a webpage for the actual article, as eg. Safari Reader does.
* "redmark":https://github.com/benjisg/redmark - A per-job rate limited work queue
* "regext":https://github.com/kadirpekel/regext -- named capturing groups for javascript regexers!
* "require-analyzer":https://github.com/nodejitsu/require-analyzer -- Determine the set of requirements for a given node.js file, directory tree, or module
* "seek":https://github.com/pvorb/node-seek -- recursively search through a bunch of files
* "sh.js":http://shjs.tuton.fr -- library for Unix shell scripting, replace Bash scripts with JavaScript
* "short":https://github.com/edwardhotchkiss/short -- URL shortener built over mongoose for use as an internal API or as a standalone
* "simplesets":https://github.com/PeterScott/simplesets-nodejs -- Set data type, with API similar to Python's sets module. Supports any data type, with equality tested by @===@.
* "Task.node":https://github.com/botanicus/task.node Simple task manager similar to Rake, Scons and others.
* "tasks.js":https://github.com/dandean/tasks.js Tasks for Node (like Rake!) with a very JavaScripty API.
* "temp":https://github.com/bruce/node-temp -- Temporary files and directories
* "tictoc":https://github.com/DTrejo/tictoc -- A simple timer just like the one from matlab. tic() dowork() toc();
* "timerjs":https://github.com/minodisk/timer-js -- Simple timer, wraps setInterval and clearInterval.
* "user-agent":https://github.com/visionmedia/user-agent.js -- user agent string parser
* "uuidjs":http://bitbucket.org/nikhilm/uuidjs -- Simple, fast UUID generation (uses native binding to libuuid)
* "node-uuid":https://github.com/broofa/node-uuid -- Simple, fast(er?) UUID generation (pure JS, works in node + browsers)
* "vargs":https://github.com/cloudhead/vargs -- practical variable argument handling.
* "Wheres Waldo":https://github.com/technoweenie/wheres-waldo -- track locations of users in redis
* "Wrench-JS":https://github.com/ryanmcgrath/wrench-js -- Useful Node.js operations (recursive directory operations, etc)
* "yaml":https://github.com/visionmedia/js-yaml -- CommonJS YAML parser
* "node-ncurses":https://github.com/mscdex/node-ncurses -- An ncurses binding for node.js
* -"node-terminal":https://github.com/bmeck/node-terminal- -- A simple terminal module for ansi control codes. (broken link)
* "swirl-node":https://github.com/bmizerany/swirl-node -- A simple EC2 client
* "node-hoptoad-notifier":https://github.com/tristandunn/node-hoptoad-notifier -- Report exceptions to "Hoptoad":http://hoptoadapp.com.
* "html filtre":https://github.com/yikulju/HtmlFiltre - A proxy that filters Html requests and give you an opportunity to add custom content into the response
* "pokenode":http://www.youtube.com/watch?v=qvy0mPt6Vzo - A push notification utility to make HTML/CSS development faster.
* "Set implementation":http://gist.github.com/427161 - built on the object hash
* "forms":https://github.com/caolan/forms -- An easy way to create, parse and validate forms
* "promised-io":https://github.com/kriszyp/promised-io -- Cross-platform promise-based I/O provides composibility on evented I/O.
* "node-inotify":https://github.com/c4milo/node-inotify -- Bindings to GNU/Linux Inotify API
* "node-inotify++":https://github.com/coolaj86/node-inotify-plusplus -- Thin, high-level wrapper around `node-inotify`
* "node-proxy":https://github.com/samshull/node-proxy -- Object Overloading and catch-all property interceptors using "Harmony Proxies":http://wiki.ecmascript.org/doku.php?id=harmony:proxies
* "node-ldapauth":https://github.com/joewalnes/node-ldapauth -- Authenticates users against an LDAP server
* "nodejs-clone-extend":https://github.com/shimondoodkin/nodejs-clone-extend -- a versatile clone and extend like underline.js, to clone JavaScript objects, enables DRY.
* "node-search":https://github.com/talltyler/node-search -- An asynchronous full text search engine for node
* "printf":https://github.com/wdavidw/node-printf -- Write formatted data (complete implementation of printf and sprintf)
* "sandbox":https://github.com/gf3/sandbox -- A nifty JavaScript sandbox for use with node.js
* "Sibilant":https://github.com/jbr/sibilant -- A lispy language that compiles to js
* "pdf.js":https://github.com/marak/pdf.js -- A pdf renderer for node
* "node-recaptcha":https://github.com/mirhampt/node-recaptcha -- Display and verify Recaptcha captchas
* "jsinc":https://github.com/shimondoodkin/jsinc -- Include non-module JavaScript file in node js, for example jslinq
* "sprintf":https://github.com/maritz/node-sprintf -- Sprintf() functionality
* "hrtime":https://github.com/runelabs/hrtime -- Simple high resolution time POSIX-based functions providing nanosecond resolution, realtime clock, system uptime, process cputime, process runtime.
* "simplewhois":https://github.com/davidcoallier/node-simplewhois -- Retrieve Whois information for hostnames
* "nodepal":https://github.com/synodinos/nodepal -- A Drupal integration layer for Node.js developers
* "node-usb":https://github.com/schakko/node-usb -- USB asynchronous bindings based on libusb-1.0
* "stem":https://github.com/cwolves/stem -- English, French & German Porter2 stemming algorithm & basic tokenizer
* "functools":https://github.com/azer/functools -- A library for functional programming
* "node-srs":https://github.com/springmeyer/node-srs -- Bindings to libosr for handling spatial references in node
* "node-i3":https://github.com/badboy/node-i3 -- inter-process communication with i3 using node.js' asynchronous programming style
* "node_pickle":https://github.com/mattrobenolt/node_pickle -- A Python pickled object <-> JSON transport. Writing/reading Python pickled objects to JavaScript objects.
* "algorithm-js":https://github.com/dhruvbird/algorithm-js/ -- Data Structures & Algorithms in JavaScript
* "magic":https://github.com/aikar/magic/ -- Magic Getters/Setters to write better Promise implementations similar to PHP's __get and __set methods.
* "gsl":https://github.com/wdavidw/node-gsl -- GNU Scientific Library (GSL) for NodeJS (Focusing on random at the moment)
* "inflect":https://github.com/MSNexploder/inflect -- A port of the Rails / ActiveSupport inflector to JavaScript.
* "node-trie":https://github.com/kbjr/node-trie -- A "trie":http://en.wikipedia.org/wiki/Trie dictionary storage model.
* "node-x11":https://github.com/sidorares/node-x11 -- X Window native client library (does not use Xlib/XCB, talks to X server directly)
* "typecheck":https://github.com/schrodingerz-kitten/typecheck -- A type checker for JavaScript
* "JSPP":https://github.com/schrodingerz-kitten/jspp -- A preprocessor for JavaScript
* "node-serialport":https://github.com/voodootikigod/node-serialport -- Welcome your robotic javascript overlords. Better yet, program them!
* "bencode":https://github.com/themasch/node-bencode -- bencode de/encoder for nodejs
* "mogile":https://github.com/headzoo/node-mogile -- A MogileFS client for node.js
* "aop":https://github.com/baryshev/aop -- Simple AOP realization for async applications
* "common-pool":https://github.com/baryshev/common-pool -- Simple resource pool
* "webdav-sync":https://github.com/bermi/webdav-sync -- Syncs local directories with remote WebDAV server
* "password-generator":https://github.com/bermi/password-generator -- Memorable password generator


<a name="wiki-management"></a>

h2(#managment). "Node Management Utilities":#management

* "nodeinfo":https://github.com/wearefractal/nodeinfo -- NodeJS remote system monitoring and control
* "n":https://github.com/visionmedia/n -- node version manager
* "neco":https://github.com/kuno/neco  -- Nodejs Ecosystem Coordinator
* "iisnode":https://github.com/tjanczuk/iisnode -- hosting node.js applications in IIS on Windows
* "node-discover":https://github.com/wankdanker/node-discover -- easily discover and keep track of node instances on your subnet
<a name="wiki-commonjs-compat"></a>

h2(#commonjs-compat). "CommonJS compatible modules that can be used with node.":#commonjs-compat
* "abbrev-js":https://github.com/isaacs/abbrev-js/ -- Like Ruby's Abbrev module.
* "async.js":https://github.com/caolan/async/ -- Idiomatic Functional programming lib adapted for asynchronous programming (ie. callbacks)
* "commonjs-geoUtils":https://github.com/moshen/commonjs-geoUtils -- Geographic Formulas for CommonJS
* "commonjs-utils":https://github.com/kriszyp/commonjs-utils -- "JSON Schema":http://json-schema.org/, AOP, XML-RPC, lazy arrays, and other utilities
* "data.js":https://github.com/michael/data/ -- A JavaScript data manipulation library (features Graph and Collection data abstraction formats)
* "datatypes-js":https://github.com/jfd/datatypes-js -- Byte encoding/decoding for typical datatypes in JS.
* "Dojo Toolkit (Node-compatible fork)":https://github.com/novemberborn/dojo -- The Dojo library for Node
* "dojo-node (original source used v1.6)":https://github.com/agebrock/dojo-node -- runs dojo, dojox and dijit (special requirements) on node 
* "email.js":https://github.com/craigw/email.js -- Email generation and parsing in JavaScript.
* "inflection":https://github.com/gmosx/inflection -- A port of the Rails/ActiveSupport inflector to JavaScript
* "match-js":https://github.com/jfd/match-js -- Simple pattern matching (functional style) in JS.
* "qfunction":https://github.com/koding/qfunction -- Queued-Function. Simple function queuer to make sure specified function runs one at a time, and the rest of the calls to the same function is queued. 
* "qxoo":https://github.com/fjakobs/qxoo -- port of the qooxdoo OO system to commonJS
* "schema.js":https://github.com/akidee/schema.js -- Sophisticated JSON schema based data validation and adaptation
* "underscore":http://documentcloud.github.com/underscore/ -- Unobtrusive functional programming utility library.
* "wu.js":http://fitzgen.github.com/wu.js/ -- A lazy, functional JavaScript library that ain't nuthin' ta f*ck wit.
* "tumblrBackupCoffee":https://github.com/sjerrys/tumblrBackupCoffee -- A tumblr (images|posts)backup tool with mongodb

h2(#project-generators). "Project Generators":#project-generators

* "ngen":https://github.com/visionmedia/ngen -- Package generator with best-practices baked in

<a name="wiki-coffee-script"></a>

h2(#coffee-script). "CoffeeScript modules":#coffee-script

* "coffeemate":https://github.com/kadirpekel/coffeemate -- the coffee creamer! Push coffeescript into web development.
* "simple-geoip":https://github.com/dvv/simple-geoip -- Simple _native_ maxmind GeoIP lookup. 4-6 times faster than node-maxmind-native. See wiki for details. Compiled database of countries "geo.json":https://github.com/dvv/simple-geoip/raw/master/geo.json is available
* "NodeBase":https://github.com/dotmaster/NodeBase -- A node base class for JavaScript and Coffeescript (logging, options, defaults and EventEmitter)
* "protege":https://github.com/wearefractal/protege -- NodeJS/CoffeeScript utility library aimed at making code as simple as possible.
<a name="wiki-search"></a>

h2(#search). "Full text search":#search

* "reds":https://github.com/visionmedia/reds -- light-weight & abstract (~300LOC) redis backed full text search
* "jsii":https://github.com/karussell/jsii -- pure JavaScript in-memory full text search
* "node-search":https://github.com/talltyler/node-search -- pure JavaScript full text search
* "node-clucene":https://github.com/erictj/node-clucene -- CLucene, a C++ based port of Lucene, all wrapped up in a node module for lightning-fast indexing and searching
* "mmseg4n":https://github.com/nroe/mmseg4n -- mmseg for nodejs chinese analyzer
