h2. Adding to this page

When you add a framework to this page, have a look at how others have done so, it should be a single item, with a link to the project's source code, and a short description (one line after formatting has been applied).

If you see a module without a description, feel free to edit the page and add it in, any contributions are appreciated.

h2(#modules). "Modules":#modules

h3(#web-frameworks). "Web frameworks":#web-frameworks

h4(#web-frameworks-routers). "Routers":#web-frameworks-routers
* "node-router":http://github.com/creationix/node-router -- Simple Sinatra-like http server based on fu.js from the original node-chat demo.
* "node.routes.js":http://github.com/defrex/node.routes.js/ -- A simple url router

h4(#web-frameworks-static). "Static file servers":#web-frameworks-static
* "antinode":http://github.com/mhansen/antinode -- A simple static web server
* "node-paperboy":http://github.com/felixge/node-paperboy -- A node.js module for delivering static files
* "oui":http://github.com/rsms/oui -- Web service server with great static files support

h4(#web-frameworks-micro). "Microframeworks":#web-frameworks-micro
* "(fab)":http://www.fabjs.org -- A pure javascript DSL for building async web apps
* "Nerve":http://github.com/gjritter/nerve -- Microframework with simple array-based syntax for defining an app on top of node.
* "rowan":http://github.com/idmillington/rowan -- A hierarchical microframework of reusable controllers and modular app logic.
* "scylla":http://github.com/ithinkihaveacat/node-scylla -- EJSGI-compatible router where method names double as URL-matching patterns
* "vroom":http://github.com/raycmorgan/vroom/tree/master -- A simple resource oriented web framework built on top of Node.js

h4(#web-frameworks-full). "Frameworks":#web-frameworks-full
* "Bomber":http://github.com/obt/bomberjs -- The early stages of a node.js web framework
* "chain":http://github.com/hassox/chain/ -- An evented convention for building Node Applications
* "coltrane":http://github.com/ujh/coltrane/tree/master -- A try at a higher level library/framework for node.js web development
* "djangode":http://github.com/simonw/djangode -- A framework that borrows some useful concepts from "Django":http://www.djangoproject.com/.
* "express":http://github.com/visionmedia/express/tree/master -- A robust feature rich web development framework **inspired by Sinatra**
* "js.io":http://github.com/mcarter/js.io -- Javascript Networking Library for building real-time web applications. Also see "JS.io":http://js.io
* "MVC.js":http://github.com/tuxychandru/mvc.js/tree/master -- A simple MVC framework for **REST**-ful applications, with integrated **dependency-injection** support.
* "nodemachine":http://github.com/tautologistics/nodemachine -- A port of WebMachine to Node.js
* "pintura":http://github.com/kriszyp/pintura -- REST-based web framework/"middleware":http://github.com/kriszyp/pintura/tree/master/lib/jsgi/ stack built for Ajax-style "JSON-driven applications":http://www.sitepen.com/blog/2010/01/22/introducing-pintura/.

h4(#web-frameworks-other). "Other":#web-frameworks-other
* "JSGI-Node":http://github.com/kriszyp/jsgi-node/ -- Asynchronous JSGI 0.3 Adapter for Node
* "node-mime":http://github.com/bentomas/node-mime -- Utility module for mime-type lookups
* "Picard":http://github.com/dantebronto/picard
* "simplex":http://github.com/mshakhan/simplex 

h3(#database). "Database":#database
* "awesome":http://github.com/janl/awesome -- a Redis clone in node.js
* "cradle":http://github.com/cloudhead/cradle -- a high-level, caching, CouchDB client
* "node-couch":http://github.com/sixtus/node-couch/tree/master -- a CouchDB connector
* "node-couchdb":http://github.com/felixge/node-couchdb -- A full API implementation
* "node-couchdb-min":http://github.com/rsms/node-couchdb-min -- Light-weight client with low level of abstraction and connection pooling.
* "node-dirty":http://github.com/felixge/node-dirty -- A key value store for node.js that is simple, fast & dirty.
* "node-fleet":http://github.com/jfd/node-fleet -- a FleetDB Client
* "node-memcache":http://github.com/vanillahsu/node-memcache -- a memcache client base on libmemcached
* "node-mongodb":http://github.com/orlandov/node-mongodb -- Basic MongoDB client implementation in JS/C++
* "node-mongodb-native":http://github.com/christkv/node-mongodb-native -- A pure javascript driver for MongoDB
* "node-mysql":http://github.com/masuidrive/node-mysql -- Pure Javascript MySQL async driver
* "node-mysql-sync":http://github.com/Sannis/node-mysql-sync -- MySQL synchronous bindings based on libmysqlclient
* "node-riak":http://github.com/orlandov/node-riak -- Riak client library
* "node-sqlite":http://github.com/grumdrig/node-sqlite -- Bindings for SQLite3. Interface conforms to the "HTML5 Web SQL API":http://dev.w3.org/html5/webdatabase/#sql.
* "NoSQLite":http://github.com/mrjjwright/nosqlite - A zero-config SQLite wrapper written in CoffeeScript
* "node-tyrant":http://github.com/waveto/node-tyrant/tree/master -- An implementation of the Tokyo Tyrant network protocol for the Node.js
* "node.dbslayer.js":http://github.com/Guille/node.dbslayer.js/ - Interface to DBSlayer (MySQL)
* "node_postgres":http://github.com/ry/node_postgres -- Beginning of bindings to libpg
* "noodb":http://github.com/randomekek/noodb.js -- A simple and small file backed javascript key-value store
* "persistence":http://github.com/creationix/node-persistence -- Multi-backend database/nosql system.  Backends: Sqlite3, Postgres and Memory.
* "perstore":http://github.com/kriszyp/perstore -- JavaScript persistence/object store with pluggable storage based on the "W3C DB API":http://www.w3.org/TR/IndexedDB/
* "postgres-js":http://github.com/creationix/postgres-js/tree/master -- Postgres protocol implemented in pure JS
* "redis-node-client":http://github.com/fictorial/redis-node-client/tree/master -- Redis Client by Fictorial
* "riak-js":http://github.com/frank06/riak-js -- Riak Javascript client (works on node v0.1.30+)

h3(#templating). "Templating":#templating
* "asyncEJS":http://github.com/cramforce/node-asyncEJS -- Asynchronous implementation of embedded JavaScript
* "haml.js":http://github.com/visionmedia/haml.js -- Faster / more compliant implementation of Haml
* "haml-js":http://github.com/creationix/haml-js -- Server side html generation using javascript.  Parses haml templates and renders html.
* "JSON Template":http://github.com/andychu/json-template -- Minimal but powerful template language with multiple implementations.  This is the CommonJS version, tested on Node
* "Mu (Mustache)":http://github.com/raycmorgan/Mu -- A Mustache engine that compiles templates into very fast rendering functions. Also streams the rendering process.
* "node-template":http://github.com/graphnode/node-template -- Fast and light cached templates.
* "sass.js":http://github.com/visionmedia/sass.js -- Parses Sass templates and renders css.
* "template.node.js":http://github.com/jazzychad/template.node.js -- A light, fast, cached template module for node.
* "tmpl-node":http://github.com/jed/tmpl-node -- a feature-rich template module for node.js
* "jsdom":http://github.com/tmpvar/jsdom -- pure js implementation of the dom level 1 with some browser augmentation. Level 2 and 3 are being considered.

h3(#package-management). "Package Management Systems":#package-management
* "kiwi":http://github.com/visionmedia/kiwi -- Feature rich, fast, node.js package management system -- server sponsored by Slicehost
* "npm":http://github.com/isaacs/npm -- A node package manager that uses CommonJS-compatible package.json files, written in asynchronous javascript.
* "mode":http://github.com/rsms/mode -- Distributed Node module repository.  Uses a "github repository":http://github.com/rsms/mode/tree/master/index/ to contain info about installable modules.

h3(#security). "OpenSSL / Crypto / Hashing":#security
* "hashlib":http://github.com/brainfucker/hashlib -- Fast hashing module, written in C/C++, supports: md4, md5, md6, sha, sha1, sha256, sha512
* "node-base64":http://github.com/brainfucker/node-base64 -- C++ base64 lib
* "node-crypto":http://github.com/waveto/node-crypto -- OpenSSL based Hashing, Signing and Verifying
* "node-oauth":http://github.com/ciaranj/node-oauth -- OAuth client

h3(#tcp). "TCP / IP":#tcp
* "node-httpclient":http://github.com/billywhizz/node-httpclient -- Node HTTP Client (gzip, https, cookies etc.)
* "node-protocol":http://github.com/miksago/node-protocol -- A framework for implementing protocols.
* "node-smtp":http://github.com/miksago/node-smtp -- Implementation of the SMTP protocol in Node
* "NodeFTPd":http://github.com/billywhizz/nodeftpd -- Node FTP Server

h3(#rpc). "RPC":#rpc
* "bertrpc":http://github.com/rtomayko/node-bertrpc
* "jsonrpc":http://github.com/ericflo/node-jsonrpc
* "xmlrpc-c":http://github.com/caludio/node.xmlrpc-c -- Simple XMLRPC Client

h3(#ws-ajax). "Web Sockets & Ajax":#ws-ajax
* "Comet LongPollingBuffer":http://github.com/robrighter/Long-Polling-Buffer -- A Library to simplify the server side of Comet AJAX long polling
* "Faye":http://github.com/jcoglan/faye -- Bayeux protocol Comet client and server for Node.js and Rack
* "node-XMLHttpRequest":http://github.com/driverdan/node-XMLHttpRequest
* "node.websocket.js":http://github.com/Guille/node.websocket.js -- WebSocket-compatible server.
* "node.ws.js":http://github.com/ncr/node.ws.js -- A basic Web Socket server with interface similar to tcp.createServer(...)
* "nodejs-http-websocket":http://github.com/zimbatm/nodejs-http-websocket -- A websocket server on top of the http server.
* "Restler":http://github.com/danwrong/restler -- Simplified REST client for Node.js

h3(#testing). "Testing / Spec Frameworks":#testing
* "nodeunit":http://github.com/caolan/nodeunit -- Quick and easy unit testing, based on a simplified version of the QUnit API
* "espionage":http://github.com/smtlaissezfaire/espionage -- A mock/stub framework using the test spy pattern.
* "exemplor.js":http://github.com/chrislloyd/exemplor.js -- A port of "exemplor":http://github.com/quackingduck/exemplor with Node goodness.
* "jspec":http://github.com/visionmedia/jspec -- Feature Rich BDD Testing Framework
* "mjsunit.runner":http://github.com/tmpvar/mjsunit.runner -- Command line mjsunit runner which provides an easy way to hook into mjsunit and start running tests immediately.
* "node-async-testing":http://github.com/bentomas/node-async-testing -- Simple testing (hopefully)
* "node-stories":http://github.com/tobiassvn/node-stories -- Given/When/Then integration awesomeness for Node.
* "ntest":http://github.com/technoweenie/ntest -- another unit testing framework
* "spectacular":http://github.com/jcrosby/spectacular -- for testing
* "Speks":http://github.com/ecavazos/speks -- A specification framework for your node-code
* "vows.js":http://github.com/cloudhead/vows.js -- asynchronous testing in node.js

h3(#wrappers). "Wrappers":#wrappers
* "hxNode":http://github.com/blackdog66/hxNode/tree/master -- haXe wrappers for node

h3(#parsers). "Parsers":#parsers

h4(#parsers-xml). "XML":#parsers-xml
* "libxmljs":http://github.com/sprsquish/libxmljs -- Bindings to libxml2
* "node-xml":http://github.com/robrighter/node-xml -- An xml parser for node.js
* "node-xml2object":http://github.com/kyleslattery/node-xml2object -- Converts XML to a JS object, using the node-xml module
* "sax-js":http://github.com/isaacs/sax-js -- SAX-like parser in pure JS

h4(#parsers-commandline). "Command Line Option Parsers":#parsers-commandline
* "optparse-js":http://github.com/jfd/optparse-js/tree/master -- Option Parser in JS
* "trollopjs":http://github.com/bentomas/trollopjs -- Another option parser

h4(#parsers-other). "Other":#parsers-other
* "node-csv":http://github.com/voodootikigod/node-csv -- Efficient Evented CSV Parsing.
* "querystring.node.js":http://github.com/jazzychad/querystring.node.js -- Robust query string parsing for node.
* "yajl-js":http://bitbucket.org/nikhilm/yajl-js -- SAX-like evented JSON parsing using "yajl":http://lloyd.github.com/yajl

h3(#debugging). "Debugging / Console Utilities":#debugging
* "colored.js":http://github.com/chrislloyd/colored.js -- Colorize terminal output.
* "consolelog.js":http://github.com/jazzychad/consolelog.node.js -- stylized console logging for node.js
* "Eclipse debugger plugin":http://code.google.com/p/chromedevtools/ -- [[Using Eclipse as Node Applications Debugger]]
* "eyes.js":http://github.com/cloudhead/eyes.js -- A better, customizable value inspector for node.js
* "log4js-node":http://github.com/csausdev/log4js-node -- a port of log4js framework for node.js
* "node_debug":http://github.com/Connorhd/node_debug/tree/master -- HTTP based console and object explorer

h3(#compression). "Compression":#compression
* "node-compress":http://github.com/waveto/node-compress -- streaming compression / gzip library

h3(#graphics). "Graphics":#graphics
* "node-gd":http://github.com/taggon/node-gd -- GD graphic library bindings
* "magickal-node":http://github.com/quiiver/magickal-node -- GraphicsMagick wrapper for node.js

h3(#other). "Other":#other
* "behaviors":http://github.com/caolan/behaviors -- A simple way to check a module's exports, useful for 3rd party plugins and extensions
* "class.js":http://github.com/visionmedia/class.js -- High performance and lightweight class implementation (10-ish SLOC)
* "cookie-node":http://github.com/jed/cookie-node/ -- signed cookie functionality for node.js
* "ext":http://github.com/visionmedia/ext.js -- High quality / performance JavaScript extensions specifically for node.js
* "flickrnode":http://github.com/ciaranj/flickrnode -- A library to enable use of the flickr api (not as complete as node-flickr, but supports auth)
* "flow-js":http://github.com/willconant/flow-js -- Continuation-esque contruct for expressing multi-step asynchronous logic
* "hub.js":http://github.com/greut/hub.js -- in-memory and in progress PubSubHubBub server
* "Jerk":http://github.com/gf3/Jerk -- A fun little IRC bot library for node.js.
* "koala":http://github.com/visionmedia/koala.js -- Code syntax highlighting library 
* "limestone":http://github.com/kurokikaze/limestone -- Sphinx search server connector
* "monit":http://github.com/visionmedia/monit.js -- Process monitoring system
* "node-amqp":http://github.com/xaviershay/node-amqp -- Basic AMQP client
* "node-bittorrent":http://github.com/WizKid/node-bittorrent -- A library for handling the bittorrent protocol
* "node-continuables":http://github.com/bentomas/node-continuables -- A library making dealing with asynchronous code easier
* "node-flickr":http://github.com/edds/node-flickr -- A simple library to enable easy use of the flickr api
* "node-geoip":http://github.com/strange/node-geoip -- geoip city lookup module (uses libgeoip)
* "node-growl":http://github.com/visionmedia/node-growl -- unobtrusive notification system (growlnotify "bindings")
* "node-maxmind":http://github.com/gyordanov/node-maxmind — maxmind/geoip module (using libgeoip)
* "node-promise":http://github.com/kriszyp/node-promise -- Robust promises for node.js, includes promise utilities and promise-based I/O library
* "node-sandbox":http://github.com/gf3/node-sandbox -- A rudimentary javascript sandbox for use with node.js
* "node-s3":http://github.com/grippy/node-s3 -- App for basic Amazon Web Services S3 administration (upload files, bucket admin, etc.)
* "node-solr":http://github.com/gsf/node-solr -- Solr module for Node
* "node-taglib":http://github.com/nikhilm/node-taglib -- Beginnings of bindings to "taglib":http://developer.kde.org/~wheeler/taglib
* "node-ugly":http://github.com/felixge/node-ugly -- Allows to run PHP code from within node.js
* "node-worker":http://github.com/cramforce/node-worker -- An implementation of the WebWorker API for node.js
* "node-yql":http://github.com/drgath/node-yql -- A YQL (Yahoo Query Language) module for Node.js
* "nshtools":http://github.com/rsdoiel/nshtools -- a high level shell scripting library for file and operating system chores
* "soda.js":http://github.com/tomyan/soda -- Asynchonous JavaScript module loader for client-side and Node.js
* "uuidjs":http://bitbucket.org/nikhilm/uuidjs -- Simple UUID generation binding to libuuid.
* "Wheres Waldo":http://github.com/technoweenie/wheres-waldo -- track locations of users in redis
* "yaml":http://github.com/visionmedia/js-yaml -- CommonJS YAML parser

h2(#commonjs-compat). "CommonJS compatible modules that can be used with node.":#commonjs-compat
* "commonjs-utils":http://github.com/kriszyp/commonjs-utils -- "JSON Schema":http://json-schema.org/, AOP, XML-RPC, lazy arrays, and other utilities
* "datatypes-js":http://github.com/jfd/datatypes-js -- Byte encoding/decoding for typical datatypes in JS.
* "Dojo Toolkit (Node-compatible fork)":http://github.com/novemberborn/dojo -- The Dojo library for Node
* "email.js":http://github.com/craigw/email.js -- Email generation and parsing in Javascript.
* "match-js":http://github.com/jfd/match-js -- Simple pattern matching (functional style) in JS.
* "qxoo":http://github.com/fjakobs/qxoo -- port of the qooxdoo OO system to commonJS
* "underscore":http://documentcloud.github.com/underscore/ -- Unobtrusive functional programming utility library.
* "abbrev-js":http://github.com/isaacs/abbrev-js/ -- Like Ruby's Abbrev module.